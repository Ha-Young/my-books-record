{"version":3,"sources":["components/List.module.css","components/Add.module.css","components/Edit.module.css","components/Layout.module.css","components/Book.module.css","components/Signin.module.css","hooks/useToken.ts","components/Layout.tsx","common.ts","components/Book.tsx","components/List.tsx","services/BookService.ts","redux/utils.ts","redux/modules/books.ts","hooks/useGo.ts","services/UserService.ts","services/TokenService.ts","redux/modules/auth.ts","hooks/useAuth.ts","containers/ListContainer.tsx","pages/Home.tsx","components/Add.tsx","containers/AddContainer.tsx","pages/Add.tsx","components/Signin.tsx","containers/SigninContainer.tsx","pages/Signin.tsx","pages/NotFound.tsx","pages/Error.tsx","redux/modules/rootReducer.ts","redux/modules/rootSaga.ts","redux/create.ts","components/Detail.tsx","hooks/useBook.ts","hooks/useBookIdParams.ts","containers/DetailContainer.tsx","pages/Detail.tsx","components/Edit.tsx","containers/EditContainer.tsx","pages/Edit.tsx","App.tsx","serviceWorker.ts","index.tsx","components/Detail.module.css"],"names":["module","exports","useToken","useSelector","state","auth","token","Layout","children","className","styles","layout","padValue","value","cx","classNames","bind","Book","bookResType","bookId","title","author","createdAt","url","goDetail","goEdit","removeBook","onClick","BookOutlined","dateVal","newDate","Date","sMonth","getMonth","sDay","getDate","sYear","getFullYear","sHour","getHours","sMinute","getMinutes","sAMPM","iHourCheck","formatDate","size","type","shape","icon","HomeOutlined","EditOutlined","DeleteOutlined","Books","books","loading","goAdd","logout","extra","key","button","src","style","width","alt","dataSource","columns","dataIndex","render","_text","record","showHeader","table","rowKey","pagination","BOOK_API_URL","BookService","axios","get","headers","Authorization","response","data","book","post","patch","delete","getTokenFromState","getBooksFromState","getBooksSaga","addBookSaga","editBookSaga","removeBookSaga","sagas","booksAsync","createAsyncAction","getBooks","createAction","addBooks","addBook","editBooks","editBook","removeBooks","removeBookId","action","put","request","select","call","success","failure","payload","push","bookReq","editedBooks","map","deleteId","deleteBook","removedBooks","filter","takeEvery","takeLatest","getBooksReducer","createReducer","error","useGo","dispatch","useDispatch","goBack","useCallback","goBackTo","UserService","email","password","TokenService","localStorage","getItem","setItem","removeItem","loginSaga","logoutSaga","options","prefix","createActions","SUCCESS","pending","fail","reducer","handleActions","PENDING","FAIL","LOGIN","login","set","Error","remove","useAuth","ListContainer","useEffect","List","Home","to","Add","onSubmitAddBook","titleRef","React","useRef","messageRef","authorRef","urlRef","onBack","FormOutlined","subTitle","button_logout","bg","add","input_title","required","input_area","placeholder","ref","input","input_comment","rows","input_author","input_url","button_area","current","message","undefined","messageDialog","AddContainer","Signin","emailRef","passwordRef","align","signin_row","span","signin_contents","signin_bg","signin_title","signin_subtitle","signin_underline","email_title","autoComplete","name","password_title","SigninContainer","SigninPage","NotFound","rootReducer","history","combineReducers","router","connectRouter","rootSaga","all","authSagas","booksSagas","createBrowserHistory","sagaMiddleware","createSagaMiddleware","create","store","createStore","composeWithDevTools","applyMiddleware","routerMiddleware","run","TextArea","Input","Detail","height","display","flexDirection","justifyContent","alignItems","detail","message_title","readOnly","message_textarea","useBook","id","find","useBookIdParams","useParams","parseInt","DetailContainer","match","Edit","updateBook","edit","defaultValue","minHeight","EditContainer","App","FallbackComponent","exact","path","component","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.e1c10751.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"List_button__4xVTT\",\"table\":\"List_table__1gcNw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"Add_bg__1o8Zb\",\"add\":\"Add_add__2R8C4\",\"input_title\":\"Add_input_title__mpHJn\",\"input_comment\":\"Add_input_comment__2jZdj\",\"input_author\":\"Add_input_author__eD9w0\",\"input_url\":\"Add_input_url__39s_j\",\"required\":\"Add_required__3YGwd\",\"input_area\":\"Add_input_area__1z3Ae\",\"input\":\"Add_input__22IXh\",\"button_area\":\"Add_button_area__2aIC6\",\"button\":\"Add_button__2BE38\",\"button_logout\":\"Add_button_logout__3Nw9o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"Edit_bg__2emV5\",\"edit\":\"Edit_edit__2VW7b\",\"input_title\":\"Edit_input_title__3Uml5\",\"input_comment\":\"Edit_input_comment__3cKGG\",\"input_author\":\"Edit_input_author__2lbRB\",\"input_url\":\"Edit_input_url__2711Q\",\"required\":\"Edit_required__2gP33\",\"input_area\":\"Edit_input_area__2ngiU\",\"input\":\"Edit_input__IXmXt\",\"button_area\":\"Edit_button_area__g3CRY\",\"button\":\"Edit_button__Puq73\",\"button_logout\":\"Edit_button_logout__17acE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout\":\"Layout_layout__3HtPY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"book\":\"Book_book__2_xGt\",\"title\":\"Book_title__qJ8CP\",\"link_detail_title\":\"Book_link_detail_title__3I5bv\",\"author\":\"Book_author__PlGie\",\"link_detail_author\":\"Book_link_detail_author__3KFuo\",\"created\":\"Book_created__2O9xQ\",\"tooltips\":\"Book_tooltips__1CINJ\",\"button_url\":\"Book_button_url__3mbOl\",\"button_edit\":\"Book_button_edit__21ALi\",\"button_remove\":\"Book_button_remove__2Uz3y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"signin_row\":\"Signin_signin_row__2MSlG\",\"signin_title\":\"Signin_signin_title__Q5bMW\",\"signin_subtitle\":\"Signin_signin_subtitle__36Jj2\",\"signin_underline\":\"Signin_signin_underline__2mWLl\",\"signin_contents\":\"Signin_signin_contents__1W233\",\"signin_bg\":\"Signin_signin_bg__2qtLl\",\"email_title\":\"Signin_email_title__1ijz7\",\"password_title\":\"Signin_password_title__3IJSX\",\"required\":\"Signin_required__2dXCw\",\"input_area\":\"Signin_input_area__3Y_7c\",\"input\":\"Signin_input__2l2XT\",\"button_area\":\"Signin_button_area__3ItI3\",\"button\":\"Signin_button__hhDOU\"};","import { useSelector } from 'react-redux';\n\nimport { RootState } from '../redux/modules/rootReducer';\n\nexport default function useToken() {\n  const token = useSelector<RootState, string | null>(\n    (state) => state.auth.token,\n  );\n\n  return token;\n}\n","import React from 'react';\nimport styles from './Layout.module.css';\n\nconst Layout: React.FC = ({ children }) => (\n  <div className={styles.layout}>{children}</div>\n);\n\nexport default Layout;\n","export function formatDate(dateVal: Date) {\n  var newDate = new Date(dateVal);\n\n  var sMonth: string | number = padValue(newDate.getMonth() + 1);\n  var sDay: string | number = padValue(newDate.getDate());\n  var sYear: string | number = newDate.getFullYear();\n  var sHour: string | number = newDate.getHours();\n  var sMinute: string | number = padValue(newDate.getMinutes());\n  var sAMPM: string | number = 'am';\n\n  var iHourCheck: any = sHour;\n\n  if (iHourCheck > 12) {\n    sAMPM = 'pm';\n    sHour = iHourCheck - 12;\n  } else if (iHourCheck === 0) {\n    sHour = '12';\n  }\n\n  sHour = padValue(sHour);\n\n  return (\n    sMonth +\n    '-' +\n    sDay +\n    '-' +\n    sYear +\n    ' ' +\n    sHour +\n    ':' +\n    sMinute +\n    ' ' +\n    sAMPM\n  );\n}\n\nfunction padValue(value: string | number) {\n  return value < 10 ? '0' + value : value;\n}\n","import React from 'react';\n\nimport styles from './Book.module.css';\nimport classNames from 'classnames/bind'; // 여러개의 css 클래스 적용시키기 위해서 사용\nimport { BookResType } from '../types';\nimport {\n  BookOutlined,\n  HomeOutlined,\n  EditOutlined,\n  DeleteOutlined,\n} from '@ant-design/icons';\nimport { Tooltip, Button } from 'antd';\nimport { formatDate } from '../common';\n\ninterface BookProps {\n  bookResType: BookResType;\n  goDetail: (bookId: number) => void;\n  goEdit: (bookId: number) => void;\n  removeBook: (bookId: number) => void;\n}\n\nconst cx = classNames.bind(styles);\n\n// [project] 컨테이너에 작성된 함수를 컴포넌트에서 이용했다.\n// [project] BookResType 의 응답 값을 이용하여, Book 컴포넌트를 완성했다.\nconst Book: React.FC<BookProps> = ({\n  bookResType: { bookId, title, author, createdAt, url },\n  goDetail,\n  goEdit,\n  removeBook,\n}) => {\n  return (\n    <div className={cx('book')}>\n      <h5\n        className={cx('title', 'link_detail_title')}\n        onClick={() => goDetail(bookId)}\n      >\n        <BookOutlined /> {title}\n      </h5>\n      <span\n        className={cx('author', 'link_detail_author')}\n        onClick={() => goDetail(bookId)}\n      >\n        {author}\n      </span>\n      <span className={cx('created')}>{formatDate(createdAt)}</span>\n      <div className={cx('tooltips')}>\n        <Tooltip title={url}>\n          <Button\n            size=\"small\"\n            type=\"primary\"\n            shape=\"circle\"\n            icon={<HomeOutlined />}\n            className={cx('button_url')}\n            onClick={() => goDetail(bookId)}\n          />\n        </Tooltip>\n        <Tooltip title=\"Edit\">\n          <Button\n            size=\"small\"\n            shape=\"circle\"\n            icon={<EditOutlined />}\n            className={cx('button_edit')}\n            onClick={() => goEdit(bookId)}\n          />\n        </Tooltip>\n        <Tooltip title=\"Delete\">\n          <Button\n            size=\"small\"\n            shape=\"circle\"\n            icon={<DeleteOutlined />}\n            className={cx('button_remove')}\n            onClick={() => removeBook(bookId)}\n          />\n        </Tooltip>\n      </div>\n    </div>\n  );\n};\n\nexport default Book;\n","import React from 'react';\nimport { Table, PageHeader, Button } from 'antd';\n\nimport styles from './List.module.css';\nimport Layout from './Layout';\nimport Book from './Book';\nimport { BookResType } from '../types';\n\ninterface BooksProps {\n  books: BookResType[] | null;\n  loading: boolean;\n  goAdd: () => void;\n  logout: () => void;\n  goDetail: (bookId: number) => void;\n  goEdit: (bookId: number) => void;\n  removeBook: (bookId: number) => void;\n}\n\n// [project] 컨테이너에 작성된 함수를 컴포넌트에서 이용했다.\n// [project] BookResType 의 응답 값을 이용하여, List 컴포넌트의 키를 처리했다.\nconst Books: React.FC<BooksProps> = ({\n  books,\n  loading,\n  goAdd,\n  logout,\n  goDetail,\n  goEdit,\n  removeBook,\n}) => {\n  return (\n    <Layout>\n      <PageHeader\n        title={<div>Book List</div>}\n        extra={[\n          <Button\n            key=\"2\"\n            type=\"primary\"\n            className={styles.button}\n            onClick={goAdd}\n          >\n            Add Book\n          </Button>,\n          <Button\n            key=\"1\"\n            type=\"primary\"\n            className={styles.button}\n            onClick={logout}\n          >\n            Logout\n          </Button>,\n        ]}\n      />\n      <img src=\"/bg_list.png\" style={{ width: '100%' }} alt=\"books\" />\n      <Table\n        dataSource={books || []}\n        columns={[\n          {\n            title: 'Book',\n            dataIndex: 'book',\n            key: 'book',\n            render: (_text, record) => (\n              <Book\n                bookResType={record}\n                goDetail={goDetail}\n                goEdit={goEdit}\n                removeBook={() => removeBook(record.bookId)}\n                key={record.bookId}\n              />\n            ),\n          },\n        ]}\n        loading={books === null || loading}\n        showHeader={false}\n        className={styles.table}\n        rowKey=\"bookId\"\n        pagination={false}\n      />\n    </Layout>\n  );\n};\n\nexport default Books;\n","import axios from 'axios';\n\nimport { BookReqType, BookResType } from '../types';\n\nconst BOOK_API_URL = 'https://api.marktube.tv/v1/book';\n\nexport default class BookService {\n  public static async getBooks(token: string): Promise<BookResType[]> {\n    const response = await axios.get<BookResType[]>(BOOK_API_URL, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    return response.data;\n  }\n\n  public static async addBook(\n    token: string,\n    book: BookReqType,\n  ): Promise<BookResType> {\n    const response = await axios.post<BookResType>(BOOK_API_URL, book, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    return response.data;\n  }\n\n  public static async editBook(\n    token: string,\n    bookId: number,\n    book: BookReqType,\n  ): Promise<BookResType> {\n    const response = await axios.patch<BookResType>(\n      `${BOOK_API_URL}/${bookId}`,\n      book,\n      {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      },\n    );\n    return response.data;\n  }\n\n  public static async deleteBook(token: string, bookId: number): Promise<void> {\n    await axios.delete(`${BOOK_API_URL}/${bookId}`, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n  }\n}\n","import { RootState } from './modules/rootReducer';\nimport { BookResType } from '../types';\n\nexport function getTokenFromState(state: RootState): string | null {\n  return state.auth.token;\n}\n\nexport function getBooksFromState(state: RootState): BookResType[] | null {\n  return state.books.books;\n}\n","import {\n  createAsyncAction,\n  createReducer,\n  ActionType,\n  createAction,\n} from 'typesafe-actions';\nimport { AxiosError } from 'axios';\nimport { call, put, takeEvery, takeLatest, select } from 'redux-saga/effects';\nimport { push } from 'connected-react-router';\n\nimport { BookResType, BookReqType, BookEditReqType } from '../../types';\nimport BookService from '../../services/BookService';\nimport { getTokenFromState, getBooksFromState } from '../utils';\n\n//////////////////////////////////// Action ////////////////////////////////////\nconst BOOKS_GETLIST = 'my-books/books/BOOKS_GETLIST'; // 책 목록 가져오기 Action Type\nconst BOOKS_ADD = 'my-books/books/BOOK_ADD'; // 책 추가하기 Action Type\nconst BOOKS_EDIT = 'my-books/books/BOOK_EDIT'; // 책 수정하기 Action Type\nconst BOOKS_REMOVE = 'my-books/books/BOOK_REMOVE'; // 책 삭제하기 Action Type\n\nconst BOOKS_PENDING = 'my-books/books/BOOKS_PENDING';\nconst BOOKS_SUCCESS = 'my-books/books/BOOKS_SUCCESS';\nconst BOOKS_FAILURE = 'my-books/books/BOOKS_FAILURE';\n\n// AsyncAction Creator\nexport const booksAsync = createAsyncAction(\n  BOOKS_PENDING,\n  BOOKS_SUCCESS,\n  BOOKS_FAILURE,\n)<undefined, BookResType[], AxiosError>();\n\nexport const getBooks = createAction(BOOKS_GETLIST)(); // 책 가져오기 Action Creator\n\nexport const addBooks = createAction(\n  BOOKS_ADD,\n  (addBook: BookReqType) => addBook,\n)(); // 책 추가하기 Action Creator\n\nexport const editBooks = createAction(\n  BOOKS_EDIT,\n  (editBook: BookEditReqType) => editBook,\n)(); // 책 수정하기 Action Creator\n\nexport const removeBooks = createAction(\n  BOOKS_REMOVE,\n  (removeBookId: number) => removeBookId,\n)(); // 책 삭제하기 Action Creator\n\n//////////////////////////////////// Reducer ////////////////////////////////////\nexport interface BooksState {\n  books: BookResType[] | null;\n  loading: boolean;\n  error: Error | null;\n}\n\nconst initialState: BooksState = {\n  books: null,\n  loading: false,\n  error: null,\n};\n\nconst actions = { getBooks, addBooks, editBooks, removeBooks };\ntype GETBooksAction =\n  | ActionType<typeof booksAsync>\n  | ActionType<typeof actions>;\n\nconst getBooksReducer = createReducer<BooksState, GETBooksAction>(\n  initialState,\n  {\n    [BOOKS_PENDING]: (state) => ({\n      loading: true,\n      books: state.books,\n      error: null,\n    }),\n    [BOOKS_SUCCESS]: (state, action) => ({\n      loading: false,\n      books: action.payload,\n      error: null,\n    }),\n    [BOOKS_FAILURE]: (state, action) => ({\n      loading: false,\n      books: null,\n      error: action.payload,\n    }),\n  },\n);\n\n//////////////////////////////////// SAGA ////////////////////////////////////\nfunction* getBooksSaga(action: ReturnType<typeof getBooks>) {\n  try {\n    yield put(booksAsync.request());\n    const token: string = yield select(getTokenFromState); // token 값을 가져온다.\n    const books: BookResType[] = yield call(BookService.getBooks, token);\n    yield put(booksAsync.success(books));\n  } catch (e) {\n    yield put(booksAsync.failure(e));\n  }\n}\n\nfunction* addBookSaga(action: ReturnType<typeof addBooks>) {\n  try {\n    yield put(booksAsync.request());\n    const token: string = yield select(getTokenFromState); // token 값을 가져온다.\n    const books: BookResType[] = yield select(getBooksFromState); // books 값을 가져온다.\n    const addBook: BookResType = yield call(\n      BookService.addBook,\n      token,\n      action.payload,\n    );\n    yield put(booksAsync.success([...books, addBook]));\n    yield put(push('/'));\n  } catch (e) {\n    yield put(booksAsync.failure(e));\n  }\n}\n\nfunction* editBookSaga(action: ReturnType<typeof editBooks>) {\n  try {\n    yield put(booksAsync.request());\n    const token: string = yield select(getTokenFromState); // token 값을 가져온다.\n    const books: BookResType[] = yield select(getBooksFromState); // books 값을 가져온다.\n    const editBook: BookResType = yield call(\n      BookService.editBook,\n      token,\n      action.payload.bookId,\n      action.payload.bookReq,\n    );\n    const editedBooks = books.map((book) =>\n      book.bookId === editBook.bookId ? editBook : book,\n    );\n    yield put(booksAsync.success(editedBooks));\n    yield put(push('/'));\n  } catch (e) {\n    yield put(booksAsync.failure(e));\n  }\n}\n\nfunction* removeBookSaga(action: ReturnType<typeof removeBooks>) {\n  try {\n    yield put(booksAsync.request());\n    const token: string = yield select(getTokenFromState); // token 값을 가져온다.\n    const books: BookResType[] = yield select(getBooksFromState); // books 값을 가져온다.\n    const deleteId = action.payload;\n    yield call(BookService.deleteBook, token, deleteId);\n    const removedBooks = books.filter((book) => book.bookId !== deleteId);\n    yield put(booksAsync.success(removedBooks));\n    yield put(push('/'));\n  } catch (e) {\n    yield put(booksAsync.failure(e));\n  }\n}\n\nexport function* sagas() {\n  yield takeEvery(getBooks, getBooksSaga);\n  yield takeLatest(addBooks, addBookSaga);\n  yield takeLatest(editBooks, editBookSaga);\n  yield takeLatest(removeBooks, removeBookSaga);\n}\n\nexport default getBooksReducer;\n","import { useDispatch } from 'react-redux';\nimport { goBack as goBackTo, push } from 'connected-react-router';\nimport { useCallback } from 'react';\n\ntype useGoRetType = {\n  goBack: () => void;\n  goAdd: () => void;\n  goEdit: (bookId: number) => void;\n  goDetail: (bookId: number) => void;\n};\n\nexport default function useGo(): useGoRetType {\n  const dispatch = useDispatch();\n\n  const goBack = useCallback(() => {\n    dispatch(goBackTo());\n  }, [dispatch]);\n\n  const goEdit = useCallback(\n    (bookId: number) => {\n      dispatch(push(`/edit/${bookId}`));\n    },\n    [dispatch],\n  );\n\n  const goAdd = useCallback(() => {\n    dispatch(push('/add'));\n  }, [dispatch]);\n\n  const goDetail = useCallback(\n    (bookId: number) => {\n      dispatch(push(`/book/${bookId}`));\n    },\n    [dispatch],\n  );\n\n  return { goBack, goEdit, goAdd, goDetail };\n}\n","import axios from 'axios';\n\nimport { LoginReqType, LoginResType } from '../types';\n\nconst USER_API_URL = 'https://api.marktube.tv/v1/me';\n\nexport default class UserService {\n  public static async login({\n    email,\n    password,\n  }: LoginReqType): Promise<string> {\n    const response = await axios.post<LoginResType>(USER_API_URL, {\n      email,\n      password,\n    });\n    return response.data.token;\n  }\n\n  public static async logout(token: string): Promise<void> {\n    await axios.delete(USER_API_URL, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n  }\n}\n","const LOCAL_STORAGE_TOKEN_KEY_NAME = 'token';\n\nexport default class TokenService {\n  public static get(): string | null {\n    return localStorage.getItem(LOCAL_STORAGE_TOKEN_KEY_NAME);\n  }\n\n  public static set(token: string): void {\n    localStorage.setItem(LOCAL_STORAGE_TOKEN_KEY_NAME, token);\n  }\n\n  public static remove(): void {\n    localStorage.removeItem(LOCAL_STORAGE_TOKEN_KEY_NAME);\n  }\n}\n","import { AnyAction } from 'redux';\nimport { createActions, handleActions } from 'redux-actions';\nimport { takeEvery, put, call, select } from 'redux-saga/effects';\nimport { push } from 'connected-react-router';\n\nimport { LoginReqType } from '../../types';\nimport { getTokenFromState } from '../utils';\nimport UserService from '../../services/UserService';\nimport TokenService from '../../services/TokenService';\n\nexport interface AuthState {\n  token: string | null;\n  loading: boolean;\n  error: Error | null;\n}\n\nconst initialState: AuthState = {\n  token: null,\n  loading: false,\n  error: null,\n};\n\nconst options = {\n  prefix: 'my-books/auth',\n};\n\nexport const { success, pending, fail } = createActions(\n  {\n    SUCCESS: (token: string) => ({ token }),\n  },\n  'PENDING',\n  'FAIL',\n  options,\n);\n\nconst reducer = handleActions<AuthState, any>(\n  {\n    PENDING: (state) => ({\n      ...state,\n      loading: true,\n      error: null,\n    }),\n    SUCCESS: (state, action) => ({\n      ...state,\n      token: action.payload.token,\n      loading: false,\n      error: null,\n    }),\n    FAIL: (state, action) => ({\n      ...state,\n      loading: false,\n      error: action.payload,\n    }),\n  },\n  initialState,\n  options,\n);\n\nexport default reducer;\n\nexport const { login, logout } = createActions(\n  {\n    LOGIN: ({ email, password }: LoginReqType) => ({\n      email,\n      password,\n    }),\n  },\n  'LOGOUT',\n  options,\n);\n\nexport function* sagas() {\n  yield takeEvery(`${options.prefix}/LOGIN`, loginSaga);\n  yield takeEvery(`${options.prefix}/LOGOUT`, logoutSaga);\n}\n\ninterface LoginSagaAction extends AnyAction {\n  payload: LoginReqType;\n}\n\nfunction* loginSaga(action: LoginSagaAction) {\n  try {\n    yield put(pending());\n    const token: string = yield call(UserService.login, action.payload);\n    TokenService.set(token);\n    yield put(success(token));\n    yield put(push('/'));\n  } catch (error) {\n    yield put(fail(new Error(error?.response?.data?.error || 'UNKNOWN_ERROR')));\n  }\n}\n\nfunction* logoutSaga() {\n  try {\n    yield put(pending());\n    const token: string = yield select(getTokenFromState);\n    yield call(UserService.logout, token);\n  } catch (error) {\n    // console.log(error);\n  } finally {\n    TokenService.remove();\n    yield put(success(null));\n    yield put(push('/signin'));\n  }\n}\n","import { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { logout as logoutSaga } from '../redux/modules/auth';\nimport { login as loginSaga } from '../redux/modules/auth';\nimport { LoginReqType } from '../types';\n\ntype useAuthRetType = {\n  login: ({ email, password }: LoginReqType) => void;\n  logout: () => void;\n};\n\nexport function useAuth(): useAuthRetType {\n  const dispatch = useDispatch();\n\n  const login = useCallback(\n    ({ email, password }: LoginReqType) => {\n      dispatch(loginSaga({ email, password }));\n    },\n    [dispatch],\n  );\n\n  const logout = useCallback(() => {\n    dispatch(logoutSaga());\n  }, [dispatch]);\n\n  return { login, logout };\n}\n","import React, { useCallback, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport List from '../components/List';\nimport { RootState } from '../redux/modules/rootReducer';\nimport { getBooks, removeBooks } from '../redux/modules/books';\nimport useGo from '../hooks/useGo';\nimport { useAuth } from '../hooks/useAuth';\n\nconst ListContainer: React.FC = () => {\n  const dispatch = useDispatch();\n\n  // Book Component에 전달하기 위한 클릭 리스너\n  const { logout } = useAuth();\n\n  const { goAdd, goDetail, goEdit } = useGo();\n\n  const removeBook = useCallback(\n    (bookId: number) => {\n      dispatch(removeBooks(bookId));\n    },\n    [dispatch],\n  );\n\n  // [project] saga 함수를 실행하는 액션 생성 함수를 실행하는 함수를 컨테이너에 작성했다.\n  const { books, loading, error } = useSelector(\n    (state: RootState) => state.books,\n  );\n\n  useEffect(() => {\n    if (books) return;\n\n    dispatch(getBooks());\n  }, [dispatch, books]);\n  // [project] 컨테이너에서 useDispatch, useSelector, useCallback 을 활용해서 중복없이 비동기 데이터를 보여주도록 처리했다.\n\n  return (\n    <>\n      {error ? (\n        logout()\n      ) : (\n        <List\n          books={books}\n          loading={loading}\n          goAdd={goAdd}\n          logout={logout}\n          goDetail={goDetail}\n          goEdit={goEdit}\n          removeBook={removeBook}\n        />\n      )}\n    </>\n  );\n};\n\nexport default ListContainer;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport useToken from '../hooks/useToken';\nimport ListContainer from '../containers/ListContainer';\n\nconst Home: React.FC = () => {\n  const token = useToken();\n  if (token === null) {\n    return <Redirect to=\"/signin\" />;\n  }\n  return <ListContainer />;\n};\n\nexport default Home;\n","import React from 'react';\nimport { message as messageDialog, PageHeader, Input, Button } from 'antd';\nimport TextArea from 'antd/lib/input/TextArea';\nimport { FormOutlined } from '@ant-design/icons';\n\nimport Layout from './Layout';\nimport styles from './Add.module.css';\nimport { BookReqType } from '../types';\n\ninterface AddProps {\n  loading: boolean;\n  logout: () => void;\n  onSubmitAddBook: (bookReq: BookReqType) => void;\n  goBack: () => void;\n}\n\n// [project] 컨테이너에 작성된 함수를 컴포넌트에서 이용했다.\nconst Add: React.FC<AddProps> = ({\n  loading,\n  logout,\n  onSubmitAddBook,\n  goBack,\n}) => {\n  const titleRef = React.useRef<Input>(null);\n  const messageRef = React.useRef<TextArea>(null);\n  const authorRef = React.useRef<Input>(null);\n  const urlRef = React.useRef<Input>(null);\n\n  return (\n    <Layout>\n      <PageHeader\n        onBack={goBack}\n        title={\n          <div>\n            <FormOutlined /> Add Book\n          </div>\n        }\n        subTitle=\"Add Your Book\"\n        extra={[\n          <Button\n            key=\"1\"\n            type=\"primary\"\n            className={styles.button_logout}\n            onClick={logout}\n          >\n            Logout\n          </Button>,\n        ]}\n      />\n\n      <img src=\"/bg_list.png\" className={styles.bg} alt=\"books\" />\n\n      <div className={styles.add}>\n        <div className={styles.input_title}>\n          Title\n          <span className={styles.required}> *</span>\n        </div>\n        <div className={styles.input_area}>\n          <Input placeholder=\"Title\" ref={titleRef} className={styles.input} />\n        </div>\n        <div className={styles.input_comment}>\n          Comment\n          <span className={styles.required}> *</span>\n        </div>\n        <div className={styles.input_area}>\n          <TextArea\n            rows={4}\n            placeholder=\"Comment\"\n            ref={messageRef}\n            className={styles.input}\n          />\n        </div>\n        <div className={styles.input_author}>\n          Author\n          <span className={styles.required}> *</span>\n        </div>\n        <div className={styles.input_area}>\n          <Input\n            placeholder=\"Author\"\n            ref={authorRef}\n            className={styles.input}\n          />\n        </div>\n        <div className={styles.input_url}>\n          URL\n          <span className={styles.required}> *</span>\n        </div>\n        <div className={styles.input_area}>\n          <Input placeholder=\"URL\" ref={urlRef} className={styles.input} />\n        </div>\n        <div className={styles.button_area}>\n          <Button\n            size=\"large\"\n            loading={loading}\n            onClick={click}\n            className={styles.button}\n          >\n            Add\n          </Button>\n        </div>\n      </div>\n    </Layout>\n  );\n\n  function click() {\n    const title = titleRef.current!.state.value;\n    const message = messageRef.current!.state.value;\n    const author = authorRef.current!.state.value;\n    const url = urlRef.current!.state.value;\n\n    if (\n      title === undefined ||\n      message === undefined ||\n      author === undefined ||\n      url === undefined\n    ) {\n      messageDialog.error('Please fill out all inputs');\n      return;\n    } else {\n      onSubmitAddBook({\n        title,\n        message,\n        author,\n        url,\n      });\n    }\n  }\n};\nexport default Add;\n","import React, { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport Add from '../components/Add';\nimport { BookReqType } from '../types';\nimport { addBooks } from '../redux/modules/books';\nimport useGo from '../hooks/useGo';\nimport { useAuth } from '../hooks/useAuth';\n\nconst AddContainer = () => {\n  const dispatch = useDispatch();\n\n  // [project] saga 함수를 실행하는 액션 생성 함수를 실행하는 함수를 컨테이너에 작성했다.\n  // [project] 컨테이너에서 useDispatch, useSelector, useCallback 을 활용해서 중복없이 비동기 데이터를 보여주도록 처리했다.\n  const onSubmitAddBook = useCallback(\n    (bookReq: BookReqType) => {\n      dispatch(addBooks(bookReq));\n    },\n    [dispatch],\n  );\n\n  const { logout } = useAuth();\n\n  const { goBack } = useGo();\n\n  return (\n    <Add\n      loading={false}\n      logout={logout}\n      onSubmitAddBook={onSubmitAddBook}\n      goBack={goBack}\n    />\n  );\n};\n\nexport default AddContainer;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport useToken from '../hooks/useToken';\nimport AddContainer from '../containers/AddContainer';\n\nconst Add = () => {\n  const token = useToken();\n  if (token === null) {\n    return <Redirect to=\"/signin\" />;\n  }\n  return <AddContainer />;\n};\n\nexport default Add;\n","import React, { useEffect } from 'react';\nimport { Row, Col, Button, Input, message } from 'antd';\n\nimport styles from './Signin.module.css';\nimport { LoginReqType } from '../types';\n\ninterface SigninProps {\n  loading: boolean;\n  error: Error | null;\n  login: ({ email, password }: LoginReqType) => void;\n}\n\nconst Signin: React.FC<SigninProps> = ({ loading, login, error }) => {\n  const emailRef = React.useRef<Input>(null);\n  const passwordRef = React.useRef<Input>(null);\n\n  useEffect(() => {\n    if (error === null) return;\n\n    switch (error.message) {\n      case 'USER_NOT_EXIST':\n        message.error('User not exist');\n        break;\n      case 'PASSWORD_NOT_MATCH':\n        message.error('Wrong password');\n        break;\n      default:\n        message.error('Unknown error occured');\n    }\n  }, [error]);\n\n  return (\n    <form>\n      <Row align=\"middle\" className={styles.signin_row}>\n        <Col span={24}>\n          <Row className={styles.signin_contents}>\n            <Col span={12}>\n              <img\n                src=\"/bg_signin.png\"\n                alt=\"Signin\"\n                className={styles.signin_bg}\n              />\n            </Col>\n            <Col span={12}>\n              <div className={styles.signin_title}>My Books</div>\n              <div className={styles.signin_subtitle}>\n                Please Note Your Opinion\n              </div>\n              <div className={styles.signin_underline} />\n              <div className={styles.email_title}>\n                Email\n                <span className={styles.required}> *</span>\n              </div>\n              <div className={styles.input_area}>\n                <Input\n                  placeholder=\"Email\"\n                  autoComplete=\"email\"\n                  name=\"email\"\n                  ref={emailRef}\n                  className={styles.input}\n                />\n              </div>\n              <div className={styles.password_title}>\n                Password\n                <span className={styles.required}> *</span>\n              </div>\n              <div className={styles.input_area}>\n                <Input\n                  type=\"password\"\n                  autoComplete=\"current-password\"\n                  ref={passwordRef}\n                  className={styles.input}\n                />\n              </div>\n              <div className={styles.button_area}>\n                <Button\n                  size=\"large\"\n                  loading={loading}\n                  onClick={click}\n                  className={styles.button}\n                >\n                  Sign In\n                </Button>\n              </div>\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </form>\n  );\n\n  function click() {\n    const email = emailRef.current?.state.value;\n    const password = passwordRef.current?.state.value;\n\n    login({ email, password });\n  }\n};\n\nexport default Signin;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport Signin from '../components/Signin';\nimport { RootState } from '../redux/modules/rootReducer';\nimport { useAuth } from '../hooks/useAuth';\n\nconst SigninContainer: React.FC = () => {\n  const loading = useSelector<RootState, boolean>(\n    (state) => state.auth.loading,\n  );\n  const error = useSelector<RootState, Error | null>(\n    (state) => state.auth.error,\n  );\n\n  const { login } = useAuth();\n\n  return <Signin loading={loading} error={error} login={login} />;\n};\n\nexport default SigninContainer;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport useToken from '../hooks/useToken';\nimport SigninContainer from '../containers/SigninContainer';\n\nconst SigninPage = () => {\n  const token = useToken();\n  if (token !== null) {\n    return <Redirect to=\"/\" />;\n  }\n  return <SigninContainer />;\n};\n\nexport default SigninPage;\n","import React from 'react';\n\nconst NotFound: React.FC = () => (\n  <div>\n    <h1>NotFound</h1>\n  </div>\n);\n\nexport default NotFound;\n","import React from 'react';\nimport { FallbackProps } from 'react-error-boundary';\n\nconst Error: React.FC<FallbackProps> = ({ error }) => {\n  if (error === undefined) {\n    return <div>Unknown Error</div>;\n  }\n  return <div>{error.message}</div>;\n};\n\nexport default Error;\n","import { combineReducers, AnyAction, Reducer } from 'redux';\nimport { connectRouter, RouterState } from 'connected-react-router';\nimport { History } from 'history';\n\nimport books, { BooksState } from './books';\nimport auth, { AuthState } from './auth';\n\nexport interface RootState {\n  books: BooksState;\n  auth: AuthState;\n  router: Reducer<RouterState<unknown>, AnyAction>;\n}\n\nconst rootReducer = (history: History<unknown>) =>\n  combineReducers({\n    books,\n    auth,\n    router: connectRouter(history),\n  });\n\nexport default rootReducer;\n","import { all } from 'redux-saga/effects';\n\nimport { sagas as authSagas } from './auth';\nimport { sagas as booksSagas } from './books';\n\nexport default function* rootSaga() {\n  yield all([authSagas(), booksSagas()]);\n}\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { createBrowserHistory } from 'history';\nimport { routerMiddleware } from 'connected-react-router';\nimport createSagaMiddleware from 'redux-saga';\n\nimport rootReducer from './modules/rootReducer';\nimport rootSaga from './modules/rootSaga';\nimport TokenService from '../services/TokenService';\n\nexport const history = createBrowserHistory();\nconst sagaMiddleware = createSagaMiddleware();\n\nconst create = () => {\n  const token = TokenService.get();\n\n  const store = createStore(\n    rootReducer(history),\n    {\n      auth: {\n        token,\n        loading: false,\n        error: null,\n      },\n    },\n    composeWithDevTools(\n      applyMiddleware(routerMiddleware(history), sagaMiddleware),\n    ),\n  );\n\n  sagaMiddleware.run(rootSaga);\n\n  return store;\n};\n\nexport default create;\n","import React from 'react';\nimport { PageHeader, Button, Input } from 'antd';\nimport { BookOutlined } from '@ant-design/icons';\n\nimport Layout from './Layout';\nimport { BookResType } from '../types';\nimport styles from './Detail.module.css';\n\nconst { TextArea } = Input;\n\ninterface DetailProps {\n  book: BookResType | null | undefined;\n  logout: () => void;\n  goEdit: (bookId: number) => void;\n  goBack: () => void;\n}\n\n// [project] 컨테이너에 작성된 함수를 컴포넌트에서 이용했다.\n// [project] BookResType 의 응답 값을 이용하여, Detail 컴포넌트를 완성했다.\nconst Detail: React.FC<DetailProps> = ({ book, logout, goEdit, goBack }) => {\n  if (book == null) {\n    return (\n      <div\n        style={{\n          width: '100vw',\n          height: '100vh',\n          display: 'flex',\n          flexDirection: 'column',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}\n      >\n        <h1>NotFound Book</h1>\n        <h3>this is incorrect access</h3>\n      </div>\n    );\n  }\n\n  return (\n    <Layout>\n      <PageHeader\n        onBack={goBack}\n        title={\n          <div>\n            <BookOutlined /> {book.title}\n          </div>\n        }\n        subTitle={book.author}\n        extra={[\n          <Button\n            key=\"2\"\n            type=\"primary\"\n            onClick={onEditClick}\n            className={styles.button}\n          >\n            Edit\n          </Button>,\n          <Button\n            key=\"1\"\n            type=\"primary\"\n            className={styles.button}\n            onClick={logout}\n          >\n            Logout\n          </Button>,\n        ]}\n      />\n\n      <img src=\"/bg_list.png\" className={styles.bg} alt=\"books\" />\n\n      <div className={styles.detail}>\n        <div className={styles.message_title}>My Comment </div>\n        <div className={styles.message}>\n          <TextArea\n            rows={4}\n            value={book.message}\n            readOnly\n            className={styles.message_textarea}\n          />\n        </div>\n        <div className={styles.button_area}></div>\n      </div>\n    </Layout>\n  );\n\n  function onEditClick() {\n    book && goEdit(book.bookId);\n  }\n};\nexport default Detail;\n","import { useSelector } from 'react-redux';\nimport { RootState } from '../redux/modules/rootReducer';\n\nexport default function useBook(id: number) {\n  const books = useSelector((state: RootState) => state.books.books);\n\n  if (books == null) return null;\n\n  return books.find((book) => book.bookId === id);\n}\n","import { useParams } from 'react-router-dom';\n\nexport default function useBookIdParams() {\n  const { id } = useParams();\n  if (id === undefined) {\n    return -1;\n  } else return parseInt(id);\n}\n","import React from 'react';\n\nimport Detail from '../components/Detail';\nimport useBook from '../hooks/useBook';\nimport useGo from '../hooks/useGo';\nimport { useAuth } from '../hooks/useAuth';\nimport useBookIdParams from '../hooks/useBookIdParams';\n\nconst DetailContainer = () => {\n  // [project] saga 함수를 실행하는 액션 생성 함수를 실행하는 함수를 컨테이너에 작성했다.\n  // [project] 컨테이너에서 useDispatch, useSelector, useCallback 을 활용해서 중복없이 비동기 데이터를 보여주도록 처리했다.\n  // [project] Edit 나 Detail 컴포넌트에서 새로고침 시, 리스트가 없는 경우, 리스트를 받아오도록 처리했다.\n  const { logout } = useAuth();\n\n  const { goEdit, goBack } = useGo();\n\n  const id = useBookIdParams();\n\n  const book = useBook(id);\n\n  return <Detail book={book} logout={logout} goEdit={goEdit} goBack={goBack} />;\n};\n\nexport default DetailContainer;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport useToken from '../hooks/useToken';\nimport DetailContainer from '../containers/DetailContainer';\nimport { RouterComponentProps, BookParams } from '../types';\n\nconst Detail = ({ match }: RouterComponentProps<BookParams>) => {\n  const token = useToken();\n  if (token === null) {\n    return <Redirect to=\"/signin\" />;\n  }\n  return <DetailContainer />;\n};\n\nexport default Detail;\n","import React, { useRef } from 'react';\nimport { message as messageDialog, PageHeader, Input, Button } from 'antd';\nimport TextArea from 'antd/lib/input/TextArea';\nimport { FormOutlined } from '@ant-design/icons';\n\nimport Layout from './Layout';\nimport { BookResType, BookEditReqType } from '../types';\nimport styles from './Edit.module.css';\n\ninterface EditProps {\n  book: BookResType | undefined | null;\n  logout: () => void;\n  updateBook: (editBook: BookEditReqType) => void;\n  goBack: () => void;\n}\n\n// [project] 컨테이너에 작성된 함수를 컴포넌트에서 이용했다.\n// [project] BookResType 의 응답 값을 이용하여, Edit 컴포넌트를 완성했다.\nconst Edit: React.FC<EditProps> = ({ book, logout, updateBook, goBack }) => {\n  const titleRef = useRef<Input>(null);\n  const messageRef = useRef<TextArea>(null);\n  const authorRef = useRef<Input>(null);\n  const urlRef = useRef<Input>(null);\n\n  if (book == null) {\n    return (\n      <div\n        style={{\n          width: '100vw',\n          height: '100vh',\n          display: 'flex',\n          flexDirection: 'column',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}\n      >\n        <h1>NotFound Book</h1>\n        <h3>this is incorrect access</h3>\n      </div>\n    );\n  }\n\n  return (\n    <Layout>\n      <PageHeader\n        onBack={goBack}\n        title={\n          <div>\n            <FormOutlined /> Edit Book\n          </div>\n        }\n        subTitle=\"Edit Your Book\"\n        extra={[\n          <Button\n            key=\"1\"\n            type=\"primary\"\n            className={styles.button_logout}\n            onClick={logout}\n          >\n            Logout\n          </Button>,\n        ]}\n      />\n\n      <img src=\"/bg_list.png\" className={styles.bg} alt=\"books\" />\n\n      <div className={styles.edit}>\n        <div className={styles.input_title}>\n          Title\n          <span className={styles.required}> *</span>\n        </div>\n        <div className={styles.input_area}>\n          <Input\n            placeholder=\"Title\"\n            ref={titleRef}\n            defaultValue={book.title || ''}\n            className={styles.input}\n          />\n        </div>\n        <div className={styles.input_comment}>\n          Comment\n          <span className={styles.required}> *</span>\n        </div>\n        <div className={styles.input_area}>\n          <TextArea\n            rows={4}\n            placeholder=\"Comment\"\n            ref={messageRef}\n            defaultValue={book.message || ''}\n            className={styles.input}\n            style={{ minHeight: 100 }}\n          />\n        </div>\n        <div className={styles.input_author}>Author</div>\n        <div className={styles.input_area}>\n          <Input\n            placeholder=\"Author\"\n            ref={authorRef}\n            defaultValue={book.author || ''}\n            className={styles.input}\n          />\n        </div>\n        <div className={styles.input_url}>URL</div>\n        <div className={styles.input_area}>\n          <Input\n            placeholder=\"URL\"\n            ref={urlRef}\n            defaultValue={book.url || ''}\n            className={styles.input}\n          />\n        </div>\n        <div className={styles.button_area}>\n          <Button\n            size=\"large\"\n            onClick={onUpdateClick}\n            className={styles.button}\n          >\n            Update\n          </Button>\n        </div>\n      </div>\n    </Layout>\n  );\n\n  function onUpdateClick() {\n    if (book == null) {\n      return;\n    }\n\n    const title = titleRef.current!.state.value;\n    const message = messageRef.current!.state.value;\n    const author = authorRef.current!.state.value;\n    const url = urlRef.current!.state.value;\n\n    if (\n      title === undefined ||\n      message === undefined ||\n      author === undefined ||\n      url === undefined\n    ) {\n      messageDialog.error('Please fill out all inputs');\n      return;\n    }\n\n    updateBook({\n      bookId: book.bookId,\n      bookReq: { title, author, message, url },\n    });\n  }\n};\nexport default Edit;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport Edit from '../components/Edit';\nimport { BookEditReqType } from '../types';\nimport useBook from '../hooks/useBook';\nimport { editBooks } from '../redux/modules/books';\nimport useGo from '../hooks/useGo';\nimport { useAuth } from '../hooks/useAuth';\nimport useBookIdParams from '../hooks/useBookIdParams';\n\nconst EditContainer = () => {\n  const dispatch = useDispatch();\n  // [project] saga 함수를 실행하는 액션 생성 함수를 실행하는 함수를 컨테이너에 작성했다.\n  // [project] 컨테이너에서 useDispatch, useSelector, useCallback 을 활용해서 중복없이 비동기 데이터를 보여주도록 처리했다.\n  // [project] Edit 나 Detail 컴포넌트에서 새로고침 시, 리스트가 없는 경우, 리스트를 받아오도록 처리했다.\n  const updateBook = (editBook: BookEditReqType) => {\n    dispatch(editBooks(editBook));\n  };\n\n  const { logout } = useAuth();\n\n  const { goBack } = useGo();\n\n  const id = useBookIdParams();\n\n  const book = useBook(id);\n\n  return (\n    <Edit book={book} logout={logout} updateBook={updateBook} goBack={goBack} />\n  );\n};\n\nexport default EditContainer;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport useToken from '../hooks/useToken';\nimport EditContainer from '../containers/EditContainer';\n\nconst Edit = () => {\n  const token = useToken();\n  if (token === null) {\n    return <Redirect to=\"/signin\" />;\n  }\n  return <EditContainer />;\n};\n\nexport default Edit;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Home from './pages/Home';\nimport Add from './pages/Add';\nimport Signin from './pages/Signin';\nimport NotFound from './pages/NotFound';\nimport Error from './pages/Error';\nimport ErrorBoundary from 'react-error-boundary';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { history } from './redux/create';\nimport Detail from './pages/Detail';\nimport Edit from './pages/Edit';\n\nconst App = () => (\n  <ErrorBoundary FallbackComponent={Error}>\n    <ConnectedRouter history={history}>\n      <Switch>\n        <Route exact path=\"/edit/:id\" component={Edit} />\n        <Route exact path=\"/book/:id\" component={Detail} />\n        <Route exact path=\"/signin\" component={Signin} />\n        <Route exact path=\"/add\" component={Add} />\n        <Route exact path=\"/\" component={Home} />\n        <Route component={NotFound} />\n      </Switch>\n    </ConnectedRouter>\n  </ErrorBoundary>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport 'antd/dist/antd.css';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport create from './redux/create';\n\nconst store = create();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"detail\":\"Detail_detail__pfKo6\",\"bg\":\"Detail_bg__Riz_i\",\"message_title\":\"Detail_message_title__170Xf\",\"message\":\"Detail_message__2iFsz\",\"message_textarea\":\"Detail_message_textarea__4vXE5\",\"button_area\":\"Detail_button_area__21mDq\",\"button\":\"Detail_button__2971z\"};"],"sourceRoot":""}