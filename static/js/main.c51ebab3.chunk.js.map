{"version":3,"sources":["components/List.module.css","components/Layout.module.css","components/Book.module.css","components/Add.module.css","components/Edit.module.css","hooks/useToken.ts","components/Layout.tsx","common.ts","components/Book.tsx","components/List.tsx","services/BookService.ts","redux/utils.ts","redux/modules/books.ts","hooks/useGo.ts","services/UserService.ts","services/TokenService.ts","redux/modules/auth.ts","hooks/useAuth.ts","containers/ListContainer.tsx","pages/Home.tsx","components/Add.tsx","containers/AddContainer.tsx","pages/Add.tsx","components/Signin.tsx","containers/SigninContainer.tsx","pages/Signin.tsx","pages/NotFound.tsx","pages/Error.tsx","redux/modules/rootReducer.ts","redux/modules/rootSaga.ts","redux/create.ts","components/Detail.tsx","hooks/useBook.ts","hooks/useBookIdParams.ts","containers/DetailContainer.tsx","pages/Detail.tsx","components/Edit.tsx","containers/EditContainer.tsx","pages/Edit.tsx","App.tsx","serviceWorker.ts","index.tsx","components/Signin.module.css","components/Detail.module.css"],"names":["module","exports","useToken","useSelector","state","auth","token","Layout","children","className","styles","layout","padValue","value","cx","classNames","bind","Book","bookResType","bookId","title","author","createdAt","url","goDetail","goEdit","removeBook","onClick","BookOutlined","dateVal","newDate","Date","sMonth","getMonth","sDay","getDate","sYear","getFullYear","sHour","getHours","sMinute","getMinutes","sAMPM","iHourCheck","formatDate","size","type","shape","icon","HomeOutlined","EditOutlined","DeleteOutlined","Books","books","loading","goAdd","logout","extra","key","button","src","style","width","alt","dataSource","columns","dataIndex","render","_text","record","showHeader","table","rowKey","pagination","BOOK_API_URL","BookService","axios","get","headers","Authorization","response","data","book","post","patch","delete","getTokenFromState","getBooksFromState","getBooksSaga","addBookSaga","editBookSaga","removeBookSaga","sagas","booksAsync","createAsyncAction","getBooks","createAction","addBooks","addBook","editBooks","editBook","removeBooks","removeBookId","action","put","request","select","call","success","failure","payload","push","bookReq","editedBooks","map","deleteId","deleteBook","removedBooks","filter","takeEvery","takeLatest","getBooksReducer","createReducer","error","useGo","dispatch","useDispatch","goBack","useCallback","goBackTo","UserService","email","password","TokenService","localStorage","getItem","setItem","removeItem","loginSaga","logoutSaga","options","prefix","createActions","SUCCESS","pending","fail","reducer","handleActions","PENDING","FAIL","LOGIN","login","set","Error","remove","useAuth","ListContainer","useEffect","List","Home","to","Add","onSubmitAddBook","titleRef","React","useRef","messageRef","authorRef","urlRef","onBack","FormOutlined","subTitle","button_logout","bg","add","input_title","required","input_area","placeholder","ref","input","input_comment","rows","input_author","input_url","button_area","current","message","undefined","messageDialog","AddContainer","Signin","emailRef","passwordRef","align","signin_row","span","signin_contents","signin_bg","signin_title","signin_subtitle","signin_underline","email_title","autoComplete","name","password_title","SigninContainer","SigninPage","NotFound","rootReducer","history","combineReducers","router","connectRouter","rootSaga","all","authSagas","booksSagas","createBrowserHistory","sagaMiddleware","createSagaMiddleware","create","store","createStore","composeWithDevTools","applyMiddleware","routerMiddleware","run","TextArea","Input","Detail","height","display","flexDirection","justifyContent","alignItems","detail","message_title","readOnly","message_textarea","useBook","id","find","useBookIdParams","useParams","parseInt","DetailContainer","match","Edit","updateBook","edit","defaultValue","minHeight","EditContainer","App","FallbackComponent","exact","path","component","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"+FACAA,EAAOC,QAAU,CAAC,OAAS,qBAAqB,MAAQ,sB,oBCAxDD,EAAOC,QAAU,CAAC,OAAS,yB,oBCA3BD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,MAAQ,oBAAoB,kBAAoB,gCAAgC,OAAS,qBAAqB,mBAAqB,iCAAiC,QAAU,sBAAsB,SAAW,uBAAuB,WAAa,yBAAyB,YAAc,0BAA0B,cAAgB,8B,+ECAhXD,EAAOC,QAAU,CAAC,GAAK,gBAAgB,IAAM,iBAAiB,YAAc,yBAAyB,cAAgB,2BAA2B,aAAe,0BAA0B,UAAY,uBAAuB,SAAW,sBAAsB,WAAa,wBAAwB,MAAQ,mBAAmB,YAAc,yBAAyB,OAAS,oBAAoB,cAAgB,6B,mBCAjZD,EAAOC,QAAU,CAAC,GAAK,iBAAiB,KAAO,mBAAmB,YAAc,0BAA0B,cAAgB,4BAA4B,aAAe,2BAA2B,UAAY,wBAAwB,SAAW,uBAAuB,WAAa,yBAAyB,MAAQ,oBAAoB,YAAc,0BAA0B,OAAS,qBAAqB,cAAgB,8B,8GCG/Y,SAASC,IAKtB,OAJcC,aACZ,SAACC,GAAD,OAAWA,EAAMC,KAAKC,S,kECCXC,EAJU,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACvB,yBAAKC,UAAWC,IAAOC,QAASH,I,iFCgClC,SAASI,EAASC,GAChB,OAAOA,EAAQ,GAAK,IAAMA,EAAQA,EChBpC,I,EAAMC,EAAKC,IAAWC,KAAKN,KA2DZO,EAvDmB,SAAC,GAK5B,IAAD,IAJJC,YAAeC,EAIX,EAJWA,OAAQC,EAInB,EAJmBA,MAAOC,EAI1B,EAJ0BA,OAAQC,EAIlC,EAJkCA,UAAWC,EAI7C,EAJ6CA,IACjDC,EAGI,EAHJA,SACAC,EAEI,EAFJA,OACAC,EACI,EADJA,WAEA,OACE,yBAAKjB,UAAWK,EAAG,SACjB,wBACEL,UAAWK,EAAG,QAAS,qBACvBa,QAAS,kBAAMH,EAASL,KAExB,kBAACS,EAAA,EAAD,MAJF,IAIoBR,GAEpB,0BACEX,UAAWK,EAAG,SAAU,sBACxBa,QAAS,kBAAMH,EAASL,KAEvBE,GAEH,0BAAMZ,UAAWK,EAAG,YD7CnB,SAAoBe,GACzB,IAAIC,EAAU,IAAIC,KAAKF,GAEnBG,EAA0BpB,EAASkB,EAAQG,WAAa,GACxDC,EAAwBtB,EAASkB,EAAQK,WACzCC,EAAyBN,EAAQO,cACjCC,EAAyBR,EAAQS,WACjCC,EAA2B5B,EAASkB,EAAQW,cAC5CC,EAAyB,KAEzBC,EAAkBL,EAWtB,OATIK,EAAa,IACfD,EAAQ,KACRJ,EAAQK,EAAa,IACG,IAAfA,IACTL,EAAQ,MAMRN,EACA,IACAE,EACA,IACAE,EACA,KARFE,EAAQ1B,EAAS0B,IAUf,IACAE,EACA,IACAE,ECamCE,CAAWtB,IAC5C,yBAAKb,UAAWK,EAAG,aACjB,kBAAC,IAAD,CAASM,MAAOG,GACd,kBAAC,IAAD,CACEsB,KAAK,QACLC,KAAK,UACLC,MAAM,SACNC,KAAM,kBAACC,EAAA,EAAD,MACNxC,UAAWK,EAAG,cACda,QAAS,kBAAMH,EAASL,OAG5B,kBAAC,IAAD,CAASC,MAAM,QACb,kBAAC,IAAD,CACEyB,KAAK,QACLE,MAAM,SACNC,KAAM,kBAACE,EAAA,EAAD,MACNzC,UAAWK,EAAG,eACda,QAAS,kBAAMF,EAAON,OAG1B,kBAAC,IAAD,CAASC,MAAM,UACb,kBAAC,IAAD,CACEyB,KAAK,QACLE,MAAM,SACNC,KAAM,kBAACG,EAAA,EAAD,MACN1C,UAAWK,EAAG,iBACda,QAAS,kBAAMD,EAAWP,UCSvBiC,EA7DqB,SAAC,GAQ9B,IAPLC,EAOI,EAPJA,MACAC,EAMI,EANJA,QACAC,EAKI,EALJA,MACAC,EAII,EAJJA,OACAhC,EAGI,EAHJA,SACAC,EAEI,EAFJA,OACAC,EACI,EADJA,WAEA,OACE,kBAAC,EAAD,KACE,kBAAC,IAAD,CACEN,MAAO,0CACPqC,MAAO,CACL,kBAAC,IAAD,CACEC,IAAI,IACJZ,KAAK,UACLrC,UAAWC,IAAOiD,OAClBhC,QAAS4B,GAJX,YAQA,kBAAC,IAAD,CACEG,IAAI,IACJZ,KAAK,UACLrC,UAAWC,IAAOiD,OAClBhC,QAAS6B,GAJX,aAUJ,yBAAKI,IAAI,eAAeC,MAAO,CAAEC,MAAO,QAAUC,IAAI,UACtD,kBAAC,IAAD,CACEC,WAAYX,GAAS,GACrBY,QAAS,CACP,CACE7C,MAAO,OACP8C,UAAW,OACXR,IAAK,OACLS,OAAQ,SAACC,EAAOC,GAAR,OACN,kBAAC,EAAD,CACEnD,YAAamD,EACb7C,SAAUA,EACVC,OAAQA,EACRC,WAAY,kBAAMA,EAAW2C,EAAOlD,SACpCuC,IAAKW,EAAOlD,YAKpBmC,QAAmB,OAAVD,GAAkBC,EAC3BgB,YAAY,EACZ7D,UAAWC,IAAO6D,MAClBC,OAAO,SACPC,YAAY,M,sGCvEdC,EAAe,kCAEAC,E,+IACUrE,G,uFACJsE,IAAMC,IAAmBH,EAAc,CAC5DI,QAAS,CACPC,cAAc,UAAD,OAAYzE,M,cAFvB0E,E,yBAKCA,EAASC,M,yKAIhB3E,EACA4E,G,uFAEuBN,IAAMO,KAAkBT,EAAcQ,EAAM,CACjEJ,QAAS,CACPC,cAAc,UAAD,OAAYzE,M,cAFvB0E,E,yBAKCA,EAASC,M,4KAIhB3E,EACAa,EACA+D,G,uFAEuBN,IAAMQ,MAAN,UAClBV,EADkB,YACFvD,GACnB+D,EACA,CACEJ,QAAS,CACPC,cAAc,UAAD,OAAYzE,M,cALzB0E,E,yBASCA,EAASC,M,gLAGa3E,EAAea,G,iFACtCyD,IAAMS,OAAN,UAAgBX,EAAhB,YAAgCvD,GAAU,CAC9C2D,QAAS,CACPC,cAAc,UAAD,OAAYzE,M,2GC7C1B,SAASgF,EAAkBlF,GAChC,OAAOA,EAAMC,KAAKC,MAGb,SAASiF,EAAkBnF,GAChC,OAAOA,EAAMiD,MAAMA,M,eCgFXmC,I,WAWAC,I,WAiBAC,I,WAqBAC,I,WAeOC,IA/HJC,EAAaC,4BALJ,+BACA,+BACA,+BAGIA,GAMbC,GAAWC,uBAhBF,+BAgBEA,GAEXC,GAAWD,uBAjBN,2BAmBhB,SAACE,GAAD,OAA0BA,IAFJF,GAKXG,GAAYH,uBArBN,4BAuBjB,SAACI,GAAD,OAA+BA,IAFRJ,GAKZK,GAAcL,uBAzBN,8BA2BnB,SAACM,GAAD,OAA0BA,IAFDN,GA6C3B,SAAUR,GAAae,GAAvB,yEAEI,OAFJ,kBAEUC,YAAIX,EAAWY,WAFzB,OAG0B,OAH1B,SAGgCC,YAAOpB,GAHvC,OAIiC,OADvBhF,EAHV,gBAIuCqG,YAAKhC,EAAYoB,SAAUzF,GAJlE,OAKI,OADM+C,EAJV,iBAKUmD,YAAIX,EAAWe,QAAQvD,IALjC,gCAOI,OAPJ,oCAOUmD,YAAIX,EAAWgB,QAAX,OAPd,sDAWA,SAAUpB,GAAYc,GAAtB,2EAEI,OAFJ,kBAEUC,YAAIX,EAAWY,WAFzB,OAG0B,OAH1B,SAGgCC,YAAOpB,GAHvC,OAIiC,OADvBhF,EAHV,gBAIuCoG,YAAOnB,GAJ9C,OAKiC,OADvBlC,EAJV,iBAKuCsD,YACjChC,EAAYuB,QACZ5F,EACAiG,EAAOO,SARb,QAUI,OALMZ,EALV,iBAUUM,YAAIX,EAAWe,QAAX,sBAAuBvD,GAAvB,CAA8B6C,MAV5C,QAWI,OAXJ,UAWUM,YAAIO,YAAK,MAXnB,gCAaI,OAbJ,oCAaUP,YAAIX,EAAWgB,QAAX,OAbd,sDAiBA,SAAUnB,GAAaa,GAAvB,6EAEI,OAFJ,kBAEUC,YAAIX,EAAWY,WAFzB,OAG0B,OAH1B,SAGgCC,YAAOpB,GAHvC,OAIiC,OADvBhF,EAHV,gBAIuCoG,YAAOnB,GAJ9C,OAKkC,OADxBlC,EAJV,iBAKwCsD,YAClChC,EAAYyB,SACZ9F,EACAiG,EAAOO,QAAQ3F,OACfoF,EAAOO,QAAQE,SATrB,QAcI,OATMZ,EALV,OAWUa,EAAc5D,EAAM6D,KAAI,SAAChC,GAAD,OAC5BA,EAAK/D,SAAWiF,EAASjF,OAASiF,EAAWlB,KAZnD,UAcUsB,YAAIX,EAAWe,QAAQK,IAdjC,QAeI,OAfJ,UAeUT,YAAIO,YAAK,MAfnB,gCAiBI,OAjBJ,oCAiBUP,YAAIX,EAAWgB,QAAX,OAjBd,sDAqBA,SAAUlB,GAAeY,GAAzB,6EAEI,OAFJ,kBAEUC,YAAIX,EAAWY,WAFzB,OAG0B,OAH1B,SAGgCC,YAAOpB,GAHvC,OAIiC,OADvBhF,EAHV,gBAIuCoG,YAAOnB,GAJ9C,OAMI,OAFMlC,EAJV,OAKU8D,EAAWZ,EAAOO,QAL5B,UAMUH,YAAKhC,EAAYyC,WAAY9G,EAAO6G,GAN9C,QAQI,OADME,EAAehE,EAAMiE,QAAO,SAACpC,GAAD,OAAUA,EAAK/D,SAAWgG,KAPhE,UAQUX,YAAIX,EAAWe,QAAQS,IARjC,QASI,OATJ,UASUb,YAAIO,YAAK,MATnB,gCAWI,OAXJ,oCAWUP,YAAIX,EAAWgB,QAAX,OAXd,sDAeO,SAAUjB,KAAV,iEACL,OADK,SACC2B,YAAUxB,GAAUP,IADrB,OAEL,OAFK,SAECgC,YAAWvB,GAAUR,IAFtB,OAGL,OAHK,SAGC+B,YAAWrB,GAAWT,IAHvB,OAIL,OAJK,SAIC8B,YAAWnB,GAAaV,IAJzB,uCAOQ8B,OA7FSC,wBAXS,CAC/BrE,MAAO,KACPC,SAAS,EACTqE,MAAO,OAQ4B,mBA9Cf,gCAiDD,SAACvH,GAAD,MAAY,CAC3BkD,SAAS,EACTD,MAAOjD,EAAMiD,MACbsE,MAAO,SANwB,cA7Cf,gCAqDD,SAACvH,EAAOmG,GAAR,MAAoB,CACnCjD,SAAS,EACTD,MAAOkD,EAAOO,QACda,MAAO,SAXwB,cA5Cf,gCAyDD,SAACvH,EAAOmG,GAAR,MAAoB,CACnCjD,SAAS,EACTD,MAAO,KACPsE,MAAOpB,EAAOO,YAhBiB,ICvDtB,SAASc,KACtB,IAAMC,EAAWC,cAwBjB,MAAO,CAAEC,OAtBMC,uBAAY,WACzBH,EAASI,iBACR,CAACJ,IAoBapG,OAlBFuG,uBACb,SAAC7G,GACC0G,EAASd,YAAK,SAAD,OAAU5F,OAEzB,CAAC0G,IAcsBtE,MAXXyE,uBAAY,WACxBH,EAASd,YAAK,WACb,CAACc,IAS4BrG,SAPfwG,uBACf,SAAC7G,GACC0G,EAASd,YAAK,SAAD,OAAU5F,OAEzB,CAAC0G,K,iCC3BgBK,G,iOAEjBC,E,EAAAA,MACAC,E,EAAAA,S,SAEuBxD,IAAMO,KAPZ,gCAO6C,CAC5DgD,QACAC,a,cAFIpD,E,yBAICA,EAASC,KAAK3E,O,wKAGIA,G,iFACnBsE,IAAMS,OAfK,gCAegB,CAC/BP,QAAS,CACPC,cAAc,UAAD,OAAYzE,M,yGCnBZ+H,G,mGAEjB,OAAOC,aAAaC,QAJa,W,0BAOjBjI,GAChBgI,aAAaE,QARoB,QAQkBlI,K,+BAInDgI,aAAaG,WAZoB,a,iBCuEpB7C,I,YASP8C,I,YAYAC,IAtEJC,GAAU,CACdC,OAAQ,iB,GAGgCC,aACxC,CACEC,QAAS,SAACzI,GAAD,MAAoB,CAAEA,WAEjC,UACA,OACAsI,IANahC,G,GAAAA,QAASoC,G,GAAAA,QAASC,G,GAAAA,KAgClBC,GAvBCC,aACd,CACEC,QAAS,SAAChJ,GAAD,oBAAC,gBACLA,GADI,IAEPkD,SAAS,EACTqE,MAAO,QAEToB,QAAS,SAAC3I,EAAOmG,GAAR,oBAAC,gBACLnG,GADI,IAEPE,MAAOiG,EAAOO,QAAQxG,MACtBgD,SAAS,EACTqE,MAAO,QAET0B,KAAM,SAACjJ,EAAOmG,GAAR,oBAAC,gBACFnG,GADC,IAEJkD,SAAS,EACTqE,MAAOpB,EAAOO,YAnCY,CAC9BxG,MAAO,KACPgD,SAAS,EACTqE,MAAO,MAoCPiB,I,GAK+BE,aAC/B,CACEQ,MAAO,kBAAwC,CAC7CnB,MADK,EAAGA,MAERC,SAFK,EAAUA,YAKnB,SACAQ,IARaW,G,GAAAA,MAAO/F,G,GAAAA,OAWf,SAAUoC,KAAV,iEACL,OADK,SACC2B,YAAU,GAAD,OAAIqB,GAAQC,OAAZ,UAA4BH,IADtC,OAEL,OAFK,SAECnB,YAAU,GAAD,OAAIqB,GAAQC,OAAZ,WAA6BF,IAFvC,wCASP,SAAUD,GAAUnC,GAApB,2EAEI,OAFJ,kBAEUC,YAAIwC,MAFd,OAG0B,OAH1B,SAGgCrC,YAAKuB,GAAYqB,MAAOhD,EAAOO,SAH/D,OAKI,OAFMxG,EAHV,OAII+H,GAAamB,IAAIlJ,GAJrB,SAKUkG,YAAII,GAAQtG,IALtB,OAMI,OANJ,UAMUkG,YAAIO,YAAK,MANnB,gCAQI,OARJ,oCAQUP,YAAIyC,GAAK,IAAIQ,OAAM,2CAAOzE,gBAAP,mBAAiBC,YAAjB,eAAuB0C,QAAS,mBAR7D,uDAYA,SAAUgB,KAAV,uEAEI,OAFJ,kBAEUnC,YAAIwC,MAFd,OAG0B,OAH1B,SAGgCtC,YAAOpB,GAHvC,OAII,OADMhF,EAHV,gBAIUqG,YAAKuB,GAAY1E,OAAQlD,GAJnC,iEASI,OATJ,UAQI+H,GAAaqB,SARjB,UASUlD,YAAII,GAAQ,OATtB,QAUI,OAVJ,UAUUJ,YAAIO,YAAK,YAVnB,yFChFO,SAAS4C,KACd,IAAM9B,EAAWC,cAajB,MAAO,CAAEyB,MAXKvB,uBACZ,YAAwC,IAArCG,EAAoC,EAApCA,MAAOC,EAA6B,EAA7BA,SACRP,EAASa,GAAU,CAAEP,QAAOC,gBAE9B,CAACP,IAOarE,OAJDwE,uBAAY,WACzBH,EAASc,QACR,CAACd,KCfN,IA8Ce+B,GA9CiB,WAC9B,IAAM/B,EAAWC,cAGTtE,EAAWmG,KAAXnG,OAJ4B,EAMAoE,KAA5BrE,EAN4B,EAM5BA,MAAO/B,EANqB,EAMrBA,SAAUC,EANW,EAMXA,OAEnBC,EAAasG,uBACjB,SAAC7G,GACC0G,EAASxB,GAAYlF,MAEvB,CAAC0G,IAZiC,EAgBF1H,aAChC,SAACC,GAAD,OAAsBA,EAAMiD,SADtBA,EAhB4B,EAgB5BA,MAAOC,EAhBqB,EAgBrBA,QAASqE,EAhBY,EAgBZA,MAWxB,OAPAkC,qBAAU,WACJxG,GAEJwE,EAAS9B,QACR,CAAC8B,EAAUxE,IAIZ,oCACGsE,EACCnE,IAEA,kBAACsG,EAAD,CACEzG,MAAOA,EACPC,QAASA,EACTC,MAAOA,EACPC,OAAQA,EACRhC,SAAUA,EACVC,OAAQA,EACRC,WAAYA,MClCPqI,GARQ,WAErB,OAAc,OADA7J,IAEL,kBAAC,IAAD,CAAU8J,GAAG,YAEf,kBAAC,GAAD,O,uECqHMC,GA/GiB,SAAC,GAK1B,IAJL3G,EAII,EAJJA,QACAE,EAGI,EAHJA,OACA0G,EAEI,EAFJA,gBACAnC,EACI,EADJA,OAEMoC,EAAWC,IAAMC,OAAc,MAC/BC,EAAaF,IAAMC,OAAiB,MACpCE,EAAYH,IAAMC,OAAc,MAChCG,EAASJ,IAAMC,OAAc,MAEnC,OACE,kBAAC,EAAD,KACE,kBAAC,IAAD,CACEI,OAAQ1C,EACR3G,MACE,6BACE,kBAACsJ,GAAA,EAAD,MADF,aAIFC,SAAS,gBACTlH,MAAO,CACL,kBAAC,IAAD,CACEC,IAAI,IACJZ,KAAK,UACLrC,UAAWC,KAAOkK,cAClBjJ,QAAS6B,GAJX,aAWJ,yBAAKI,IAAI,eAAenD,UAAWC,KAAOmK,GAAI9G,IAAI,UAElD,yBAAKtD,UAAWC,KAAOoK,KACrB,yBAAKrK,UAAWC,KAAOqK,aAAvB,QAEE,0BAAMtK,UAAWC,KAAOsK,UAAxB,OAEF,yBAAKvK,UAAWC,KAAOuK,YACrB,kBAAC,KAAD,CAAOC,YAAY,QAAQC,IAAKhB,EAAU1J,UAAWC,KAAO0K,SAE9D,yBAAK3K,UAAWC,KAAO2K,eAAvB,UAEE,0BAAM5K,UAAWC,KAAOsK,UAAxB,OAEF,yBAAKvK,UAAWC,KAAOuK,YACrB,kBAAC,KAAD,CACEK,KAAM,EACNJ,YAAY,UACZC,IAAKb,EACL7J,UAAWC,KAAO0K,SAGtB,yBAAK3K,UAAWC,KAAO6K,cAAvB,SAEE,0BAAM9K,UAAWC,KAAOsK,UAAxB,OAEF,yBAAKvK,UAAWC,KAAOuK,YACrB,kBAAC,KAAD,CACEC,YAAY,SACZC,IAAKZ,EACL9J,UAAWC,KAAO0K,SAGtB,yBAAK3K,UAAWC,KAAO8K,WAAvB,MAEE,0BAAM/K,UAAWC,KAAOsK,UAAxB,OAEF,yBAAKvK,UAAWC,KAAOuK,YACrB,kBAAC,KAAD,CAAOC,YAAY,MAAMC,IAAKX,EAAQ/J,UAAWC,KAAO0K,SAE1D,yBAAK3K,UAAWC,KAAO+K,aACrB,kBAAC,IAAD,CACE5I,KAAK,QACLS,QAASA,EACT3B,QAUV,WACE,IAAMP,EAAQ+I,EAASuB,QAAStL,MAAMS,MAChC8K,EAAUrB,EAAWoB,QAAStL,MAAMS,MACpCQ,EAASkJ,EAAUmB,QAAStL,MAAMS,MAClCU,EAAMiJ,EAAOkB,QAAStL,MAAMS,MAElC,QACY+K,IAAVxK,QACYwK,IAAZD,QACWC,IAAXvK,QACQuK,IAARrK,EAGA,YADAsK,KAAclE,MAAM,8BAGpBuC,EAAgB,CACd9I,QACAuK,UACAtK,SACAE,SA5BId,UAAWC,KAAOiD,QAJpB,WCxDKmI,GA1BM,WACnB,IAAMjE,EAAWC,cAIXoC,EAAkBlC,uBACtB,SAAChB,GACCa,EAAS5B,GAASe,MAEpB,CAACa,IAGKrE,EAAWmG,KAAXnG,OAEAuE,EAAWH,KAAXG,OAER,OACE,kBAAC,GAAD,CACEzE,SAAS,EACTE,OAAQA,EACR0G,gBAAiBA,EACjBnC,OAAQA,KChBCkC,GARH,WAEV,OAAc,OADA/J,IAEL,kBAAC,IAAD,CAAU8J,GAAG,YAEf,kBAAC,GAAD,O,wCCwFM+B,GAvFuB,SAAC,GAA+B,IAA7BzI,EAA4B,EAA5BA,QAASiG,EAAmB,EAAnBA,MAAO5B,EAAY,EAAZA,MACjDqE,EAAW5B,IAAMC,OAAc,MAC/B4B,EAAc7B,IAAMC,OAAc,MAiBxC,OAfAR,qBAAU,WACR,GAAc,OAAVlC,EAEJ,OAAQA,EAAMgE,SACZ,IAAK,iBACHA,KAAQhE,MAAM,kBACd,MACF,IAAK,qBACHgE,KAAQhE,MAAM,kBACd,MACF,QACEgE,KAAQhE,MAAM,4BAEjB,CAACA,IAGF,8BACE,kBAAC,KAAD,CAAKuE,MAAM,SAASzL,UAAWC,KAAOyL,YACpC,kBAAC,KAAD,CAAKC,KAAM,IACT,kBAAC,KAAD,CAAK3L,UAAWC,KAAO2L,iBACrB,kBAAC,KAAD,CAAKD,KAAM,IACT,yBACExI,IAAI,iBACJG,IAAI,SACJtD,UAAWC,KAAO4L,aAGtB,kBAAC,KAAD,CAAKF,KAAM,IACT,yBAAK3L,UAAWC,KAAO6L,cAAvB,YACA,yBAAK9L,UAAWC,KAAO8L,iBAAvB,4BAGA,yBAAK/L,UAAWC,KAAO+L,mBACvB,yBAAKhM,UAAWC,KAAOgM,aAAvB,QAEE,0BAAMjM,UAAWC,KAAOsK,UAAxB,OAEF,yBAAKvK,UAAWC,KAAOuK,YACrB,kBAAC,KAAD,CACEC,YAAY,QACZyB,aAAa,QACbC,KAAK,QACLzB,IAAKa,EACLvL,UAAWC,KAAO0K,SAGtB,yBAAK3K,UAAWC,KAAOmM,gBAAvB,WAEE,0BAAMpM,UAAWC,KAAOsK,UAAxB,OAEF,yBAAKvK,UAAWC,KAAOuK,YACrB,kBAAC,KAAD,CACEnI,KAAK,WACL6J,aAAa,mBACbxB,IAAKc,EACLxL,UAAWC,KAAO0K,SAGtB,yBAAK3K,UAAWC,KAAO+K,aACrB,kBAAC,IAAD,CACE5I,KAAK,QACLS,QAASA,EACT3B,QAahB,WAAkB,IAAD,IACTwG,EAAK,UAAG6D,EAASN,eAAZ,aAAG,EAAkBtL,MAAMS,MAChCuH,EAAQ,UAAG6D,EAAYP,eAAf,aAAG,EAAqBtL,MAAMS,MAE5C0I,EAAM,CAAEpB,QAAOC,cAhBD3H,UAAWC,KAAOiD,QAJpB,kBCvDDmJ,GAbmB,WAChC,IAAMxJ,EAAUnD,aACd,SAACC,GAAD,OAAWA,EAAMC,KAAKiD,WAElBqE,EAAQxH,aACZ,SAACC,GAAD,OAAWA,EAAMC,KAAKsH,SAGhB4B,EAAUI,KAAVJ,MAER,OAAO,kBAAC,GAAD,CAAQjG,QAASA,EAASqE,MAAOA,EAAO4B,MAAOA,KCHzCwD,GARI,WAEjB,OAAc,OADA7M,IAEL,kBAAC,IAAD,CAAU8J,GAAG,MAEf,kBAAC,GAAD,OCHMgD,GANY,kBACzB,6BACE,0CCMWvD,GAPwB,SAAC,GAAe,IAAb9B,EAAY,EAAZA,MACxC,YAAciE,IAAVjE,EACK,8CAEF,6BAAMA,EAAMgE,U,8ECaNsB,GAPK,SAACC,GAAD,OAClBC,2BAAgB,CACd9J,SACAhD,QACA+M,OAAQC,aAAcH,M,YCZDI,IAAV,SAAUA,KAAV,iEACb,OADa,SACPC,YAAI,CAACC,KAAaC,OADX,wCCKR,IAAMP,GAAUQ,eACjBC,GAAiBC,eAwBRC,GAtBA,WACb,IAAMvN,EAAQ+H,GAAaxD,MAErBiJ,EAAQC,uBACZd,GAAYC,IACZ,CACE7M,KAAM,CACJC,QACAgD,SAAS,EACTqE,MAAO,OAGXqG,+BACEC,2BAAgBC,aAAiBhB,IAAUS,MAM/C,OAFAA,GAAeQ,IAAIb,IAEZQ,G,oBCxBDM,GAAaC,KAAbD,SAiFOE,GAtEuB,SAAC,GAAsC,IAApCpJ,EAAmC,EAAnCA,KAAM1B,EAA6B,EAA7BA,OAAQ/B,EAAqB,EAArBA,OAAQsG,EAAa,EAAbA,OAC7D,OAAY,MAAR7C,EAEA,yBACErB,MAAO,CACLC,MAAO,QACPyK,OAAQ,QACRC,QAAS,OACTC,cAAe,SACfC,eAAgB,SAChBC,WAAY,WAGd,6CACA,yDAMJ,kBAAC,EAAD,KACE,kBAAC,IAAD,CACElE,OAAQ1C,EACR3G,MACE,6BACE,kBAACQ,EAAA,EAAD,MADF,IACoBsD,EAAK9D,OAG3BuJ,SAAUzF,EAAK7D,OACfoC,MAAO,CACL,kBAAC,IAAD,CACEC,IAAI,IACJZ,KAAK,UACLnB,QAiCV,WACEuD,GAAQzD,EAAOyD,EAAK/D,SAjCZV,UAAWC,KAAOiD,QAJpB,QAQA,kBAAC,IAAD,CACED,IAAI,IACJZ,KAAK,UACLrC,UAAWC,KAAOiD,OAClBhC,QAAS6B,GAJX,aAWJ,yBAAKI,IAAI,eAAenD,UAAWC,KAAOmK,GAAI9G,IAAI,UAElD,yBAAKtD,UAAWC,KAAOkO,QACrB,yBAAKnO,UAAWC,KAAOmO,eAAvB,eACA,yBAAKpO,UAAWC,KAAOiL,SACrB,kBAAC,GAAD,CACEL,KAAM,EACNzK,MAAOqE,EAAKyG,QACZmD,UAAQ,EACRrO,UAAWC,KAAOqO,oBAGtB,yBAAKtO,UAAWC,KAAO+K,iBC7EhB,SAASuD,GAAQC,GAC9B,IAAM5L,EAAQlD,aAAY,SAACC,GAAD,OAAsBA,EAAMiD,MAAMA,SAE5D,OAAa,MAATA,EAAsB,KAEnBA,EAAM6L,MAAK,SAAChK,GAAD,OAAUA,EAAK/D,SAAW8N,KCN/B,SAASE,KAAmB,IACjCF,EAAOG,cAAPH,GACR,YAAWrD,IAAPqD,GACM,EACII,SAASJ,GCEzB,IAeeK,GAfS,WAAM,IAIpB9L,EAAWmG,KAAXnG,OAJoB,EAMDoE,KAAnBnG,EANoB,EAMpBA,OAAQsG,EANY,EAMZA,OAIV7C,EAAO8J,GAFFG,MAIX,OAAO,kBAAC,GAAD,CAAQjK,KAAMA,EAAM1B,OAAQA,EAAQ/B,OAAQA,EAAQsG,OAAQA,KCLtDuG,GARA,SAAC,GAAgD,EAA9CiB,MAEhB,OAAc,OADArP,IAEL,kBAAC,IAAD,CAAU8J,GAAG,YAEf,kBAAC,GAAD,O,oBC0IMwF,GApImB,SAAC,GAA0C,IAAxCtK,EAAuC,EAAvCA,KAAM1B,EAAiC,EAAjCA,OAAQiM,EAAyB,EAAzBA,WAAY1H,EAAa,EAAbA,OACvDoC,EAAWE,iBAAc,MACzBC,EAAaD,iBAAiB,MAC9BE,EAAYF,iBAAc,MAC1BG,EAASH,iBAAc,MAE7B,OAAY,MAARnF,EAEA,yBACErB,MAAO,CACLC,MAAO,QACPyK,OAAQ,QACRC,QAAS,OACTC,cAAe,SACfC,eAAgB,SAChBC,WAAY,WAGd,6CACA,yDAMJ,kBAAC,EAAD,KACE,kBAAC,IAAD,CACElE,OAAQ1C,EACR3G,MACE,6BACE,kBAACsJ,GAAA,EAAD,MADF,cAIFC,SAAS,iBACTlH,MAAO,CACL,kBAAC,IAAD,CACEC,IAAI,IACJZ,KAAK,UACLrC,UAAWC,KAAOkK,cAClBjJ,QAAS6B,GAJX,aAWJ,yBAAKI,IAAI,eAAenD,UAAWC,KAAOmK,GAAI9G,IAAI,UAElD,yBAAKtD,UAAWC,KAAOgP,MACrB,yBAAKjP,UAAWC,KAAOqK,aAAvB,QAEE,0BAAMtK,UAAWC,KAAOsK,UAAxB,OAEF,yBAAKvK,UAAWC,KAAOuK,YACrB,kBAAC,KAAD,CACEC,YAAY,QACZC,IAAKhB,EACLwF,aAAczK,EAAK9D,OAAS,GAC5BX,UAAWC,KAAO0K,SAGtB,yBAAK3K,UAAWC,KAAO2K,eAAvB,UAEE,0BAAM5K,UAAWC,KAAOsK,UAAxB,OAEF,yBAAKvK,UAAWC,KAAOuK,YACrB,kBAAC,KAAD,CACEK,KAAM,EACNJ,YAAY,UACZC,IAAKb,EACLqF,aAAczK,EAAKyG,SAAW,GAC9BlL,UAAWC,KAAO0K,MAClBvH,MAAO,CAAE+L,UAAW,QAGxB,yBAAKnP,UAAWC,KAAO6K,cAAvB,UACA,yBAAK9K,UAAWC,KAAOuK,YACrB,kBAAC,KAAD,CACEC,YAAY,SACZC,IAAKZ,EACLoF,aAAczK,EAAK7D,QAAU,GAC7BZ,UAAWC,KAAO0K,SAGtB,yBAAK3K,UAAWC,KAAO8K,WAAvB,OACA,yBAAK/K,UAAWC,KAAOuK,YACrB,kBAAC,KAAD,CACEC,YAAY,MACZC,IAAKX,EACLmF,aAAczK,EAAK3D,KAAO,GAC1Bd,UAAWC,KAAO0K,SAGtB,yBAAK3K,UAAWC,KAAO+K,aACrB,kBAAC,IAAD,CACE5I,KAAK,QACLlB,QAUV,WACE,GAAY,MAARuD,EACF,OAGF,IAAM9D,EAAQ+I,EAASuB,QAAStL,MAAMS,MAChC8K,EAAUrB,EAAWoB,QAAStL,MAAMS,MACpCQ,EAASkJ,EAAUmB,QAAStL,MAAMS,MAClCU,EAAMiJ,EAAOkB,QAAStL,MAAMS,MAElC,QACY+K,IAAVxK,QACYwK,IAAZD,QACWC,IAAXvK,QACQuK,IAARrK,EAGA,YADAsK,KAAclE,MAAM,8BAItB8H,EAAW,CACTtO,OAAQ+D,EAAK/D,OACb6F,QAAS,CAAE5F,QAAOC,SAAQsK,UAASpK,UA/B7Bd,UAAWC,KAAOiD,QAHpB,cC/EKkM,GAtBO,WACpB,IAAMhI,EAAWC,cAQTtE,EAAWmG,KAAXnG,OAEAuE,EAAWH,KAAXG,OAIF7C,EAAO8J,GAFFG,MAIX,OACE,kBAAC,GAAD,CAAMjK,KAAMA,EAAM1B,OAAQA,EAAQiM,WAbjB,SAACrJ,GAClByB,EAAS1B,GAAUC,KAYuC2B,OAAQA,KCfvDyH,GARF,WAEX,OAAc,OADAtP,IAEL,kBAAC,IAAD,CAAU8J,GAAG,YAEf,kBAAC,GAAD,OCiBM8F,GAfH,kBACV,kBAAC,KAAD,CAAeC,kBAAmBtG,IAChC,kBAAC,KAAD,CAAiByD,QAASA,IACxB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO8C,OAAK,EAACC,KAAK,YAAYC,UAAWV,KACzC,kBAAC,IAAD,CAAOQ,OAAK,EAACC,KAAK,YAAYC,UAAW5B,KACzC,kBAAC,IAAD,CAAO0B,OAAK,EAACC,KAAK,UAAUC,UAAWnE,KACvC,kBAAC,IAAD,CAAOiE,OAAK,EAACC,KAAK,OAAOC,UAAWjG,KACpC,kBAAC,IAAD,CAAO+F,OAAK,EAACC,KAAK,IAAIC,UAAWnG,KACjC,kBAAC,IAAD,CAAOmG,UAAWlD,SCVNmD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASf,MACvB,2DCRN,IAAMzB,GAAQD,KAEd0C,IAASpM,OACP,kBAAC,IAAD,CAAU2J,MAAOA,IACf,kBAAC,GAAD,OAEF0C,SAASC,eAAe,SD2HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAArJ,GACLsJ,QAAQtJ,MAAMA,EAAMgE,a,mBEhJ5B3L,EAAOC,QAAU,CAAC,WAAa,2BAA2B,aAAe,6BAA6B,gBAAkB,gCAAgC,iBAAmB,iCAAiC,gBAAkB,gCAAgC,UAAY,0BAA0B,YAAc,4BAA4B,eAAiB,+BAA+B,SAAW,yBAAyB,WAAa,2BAA2B,MAAQ,sBAAsB,YAAc,4BAA4B,OAAS,yB,mBCA3hBD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,GAAK,mBAAmB,cAAgB,8BAA8B,QAAU,wBAAwB,iBAAmB,iCAAiC,YAAc,4BAA4B,OAAS,0B","file":"static/js/main.c51ebab3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"List_button__3So2h\",\"table\":\"List_table__2Kwqt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout\":\"Layout_layout__nbgri\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"book\":\"Book_book__3yVTF\",\"title\":\"Book_title__26IQ1\",\"link_detail_title\":\"Book_link_detail_title__2yzL6\",\"author\":\"Book_author__2Q3bU\",\"link_detail_author\":\"Book_link_detail_author__1wEpl\",\"created\":\"Book_created__29pY9\",\"tooltips\":\"Book_tooltips__2V0G6\",\"button_url\":\"Book_button_url__56NQt\",\"button_edit\":\"Book_button_edit__3Npvx\",\"button_remove\":\"Book_button_remove__3by7z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"Add_bg__3WdOd\",\"add\":\"Add_add__3MqZO\",\"input_title\":\"Add_input_title__3jpY0\",\"input_comment\":\"Add_input_comment__1FKyW\",\"input_author\":\"Add_input_author__1pfeL\",\"input_url\":\"Add_input_url__45YqY\",\"required\":\"Add_required__qvg29\",\"input_area\":\"Add_input_area__1BALc\",\"input\":\"Add_input__2VTH-\",\"button_area\":\"Add_button_area___8Hm4\",\"button\":\"Add_button__Qy23W\",\"button_logout\":\"Add_button_logout__1AuSh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"Edit_bg__2BuTI\",\"edit\":\"Edit_edit__1QCP6\",\"input_title\":\"Edit_input_title___1Poi\",\"input_comment\":\"Edit_input_comment__2BPCq\",\"input_author\":\"Edit_input_author__1_0Bc\",\"input_url\":\"Edit_input_url__191db\",\"required\":\"Edit_required__2ChgW\",\"input_area\":\"Edit_input_area__3hQYa\",\"input\":\"Edit_input__3ome1\",\"button_area\":\"Edit_button_area__3XqBp\",\"button\":\"Edit_button__O5Il9\",\"button_logout\":\"Edit_button_logout__2mhbo\"};","import { useSelector } from 'react-redux';\r\n\r\nimport { RootState } from '../redux/modules/rootReducer';\r\n\r\nexport default function useToken() {\r\n  const token = useSelector<RootState, string | null>(\r\n    (state) => state.auth.token,\r\n  );\r\n\r\n  return token;\r\n}\r\n","import React from 'react';\r\nimport styles from './Layout.module.css';\r\n\r\nconst Layout: React.FC = ({ children }) => (\r\n  <div className={styles.layout}>{children}</div>\r\n);\r\n\r\nexport default Layout;\r\n","export function formatDate(dateVal: Date) {\r\n  var newDate = new Date(dateVal);\r\n\r\n  var sMonth: string | number = padValue(newDate.getMonth() + 1);\r\n  var sDay: string | number = padValue(newDate.getDate());\r\n  var sYear: string | number = newDate.getFullYear();\r\n  var sHour: string | number = newDate.getHours();\r\n  var sMinute: string | number = padValue(newDate.getMinutes());\r\n  var sAMPM: string | number = 'am';\r\n\r\n  var iHourCheck: any = sHour;\r\n\r\n  if (iHourCheck > 12) {\r\n    sAMPM = 'pm';\r\n    sHour = iHourCheck - 12;\r\n  } else if (iHourCheck === 0) {\r\n    sHour = '12';\r\n  }\r\n\r\n  sHour = padValue(sHour);\r\n\r\n  return (\r\n    sMonth +\r\n    '-' +\r\n    sDay +\r\n    '-' +\r\n    sYear +\r\n    ' ' +\r\n    sHour +\r\n    ':' +\r\n    sMinute +\r\n    ' ' +\r\n    sAMPM\r\n  );\r\n}\r\n\r\nfunction padValue(value: string | number) {\r\n  return value < 10 ? '0' + value : value;\r\n}\r\n","import React from 'react';\r\n\r\nimport styles from './Book.module.css';\r\nimport classNames from 'classnames/bind'; // 여러개의 css 클래스 적용시키기 위해서 사용\r\nimport { BookResType } from '../types';\r\nimport {\r\n  BookOutlined,\r\n  HomeOutlined,\r\n  EditOutlined,\r\n  DeleteOutlined,\r\n} from '@ant-design/icons';\r\nimport { Tooltip, Button } from 'antd';\r\nimport { formatDate } from '../common';\r\n\r\ninterface BookProps {\r\n  bookResType: BookResType;\r\n  goDetail: (bookId: number) => void;\r\n  goEdit: (bookId: number) => void;\r\n  removeBook: (bookId: number) => void;\r\n}\r\n\r\nconst cx = classNames.bind(styles);\r\n\r\n// [project] 컨테이너에 작성된 함수를 컴포넌트에서 이용했다.\r\n// [project] BookResType 의 응답 값을 이용하여, Book 컴포넌트를 완성했다.\r\nconst Book: React.FC<BookProps> = ({\r\n  bookResType: { bookId, title, author, createdAt, url },\r\n  goDetail,\r\n  goEdit,\r\n  removeBook,\r\n}) => {\r\n  return (\r\n    <div className={cx('book')}>\r\n      <h5\r\n        className={cx('title', 'link_detail_title')}\r\n        onClick={() => goDetail(bookId)}\r\n      >\r\n        <BookOutlined /> {title}\r\n      </h5>\r\n      <span\r\n        className={cx('author', 'link_detail_author')}\r\n        onClick={() => goDetail(bookId)}\r\n      >\r\n        {author}\r\n      </span>\r\n      <span className={cx('created')}>{formatDate(createdAt)}</span>\r\n      <div className={cx('tooltips')}>\r\n        <Tooltip title={url}>\r\n          <Button\r\n            size=\"small\"\r\n            type=\"primary\"\r\n            shape=\"circle\"\r\n            icon={<HomeOutlined />}\r\n            className={cx('button_url')}\r\n            onClick={() => goDetail(bookId)}\r\n          />\r\n        </Tooltip>\r\n        <Tooltip title=\"Edit\">\r\n          <Button\r\n            size=\"small\"\r\n            shape=\"circle\"\r\n            icon={<EditOutlined />}\r\n            className={cx('button_edit')}\r\n            onClick={() => goEdit(bookId)}\r\n          />\r\n        </Tooltip>\r\n        <Tooltip title=\"Delete\">\r\n          <Button\r\n            size=\"small\"\r\n            shape=\"circle\"\r\n            icon={<DeleteOutlined />}\r\n            className={cx('button_remove')}\r\n            onClick={() => removeBook(bookId)}\r\n          />\r\n        </Tooltip>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Book;\r\n","import React from 'react';\r\nimport { Table, PageHeader, Button } from 'antd';\r\n\r\nimport styles from './List.module.css';\r\nimport Layout from './Layout';\r\nimport Book from './Book';\r\nimport { BookResType } from '../types';\r\n\r\ninterface BooksProps {\r\n  books: BookResType[] | null;\r\n  loading: boolean;\r\n  goAdd: () => void;\r\n  logout: () => void;\r\n  goDetail: (bookId: number) => void;\r\n  goEdit: (bookId: number) => void;\r\n  removeBook: (bookId: number) => void;\r\n}\r\n\r\n// [project] 컨테이너에 작성된 함수를 컴포넌트에서 이용했다.\r\n// [project] BookResType 의 응답 값을 이용하여, List 컴포넌트의 키를 처리했다.\r\nconst Books: React.FC<BooksProps> = ({\r\n  books,\r\n  loading,\r\n  goAdd,\r\n  logout,\r\n  goDetail,\r\n  goEdit,\r\n  removeBook,\r\n}) => {\r\n  return (\r\n    <Layout>\r\n      <PageHeader\r\n        title={<div>Book List</div>}\r\n        extra={[\r\n          <Button\r\n            key=\"2\"\r\n            type=\"primary\"\r\n            className={styles.button}\r\n            onClick={goAdd}\r\n          >\r\n            Add Book\r\n          </Button>,\r\n          <Button\r\n            key=\"1\"\r\n            type=\"primary\"\r\n            className={styles.button}\r\n            onClick={logout}\r\n          >\r\n            Logout\r\n          </Button>,\r\n        ]}\r\n      />\r\n      <img src=\"/bg_list.png\" style={{ width: '100%' }} alt=\"books\" />\r\n      <Table\r\n        dataSource={books || []}\r\n        columns={[\r\n          {\r\n            title: 'Book',\r\n            dataIndex: 'book',\r\n            key: 'book',\r\n            render: (_text, record) => (\r\n              <Book\r\n                bookResType={record}\r\n                goDetail={goDetail}\r\n                goEdit={goEdit}\r\n                removeBook={() => removeBook(record.bookId)}\r\n                key={record.bookId}\r\n              />\r\n            ),\r\n          },\r\n        ]}\r\n        loading={books === null || loading}\r\n        showHeader={false}\r\n        className={styles.table}\r\n        rowKey=\"bookId\"\r\n        pagination={false}\r\n      />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Books;\r\n","import axios from 'axios';\r\n\r\nimport { BookReqType, BookResType } from '../types';\r\n\r\nconst BOOK_API_URL = 'https://api.marktube.tv/v1/book';\r\n\r\nexport default class BookService {\r\n  public static async getBooks(token: string): Promise<BookResType[]> {\r\n    const response = await axios.get<BookResType[]>(BOOK_API_URL, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  }\r\n\r\n  public static async addBook(\r\n    token: string,\r\n    book: BookReqType,\r\n  ): Promise<BookResType> {\r\n    const response = await axios.post<BookResType>(BOOK_API_URL, book, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  }\r\n\r\n  public static async editBook(\r\n    token: string,\r\n    bookId: number,\r\n    book: BookReqType,\r\n  ): Promise<BookResType> {\r\n    const response = await axios.patch<BookResType>(\r\n      `${BOOK_API_URL}/${bookId}`,\r\n      book,\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      },\r\n    );\r\n    return response.data;\r\n  }\r\n\r\n  public static async deleteBook(token: string, bookId: number): Promise<void> {\r\n    await axios.delete(`${BOOK_API_URL}/${bookId}`, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { RootState } from './modules/rootReducer';\r\nimport { BookResType } from '../types';\r\n\r\nexport function getTokenFromState(state: RootState): string | null {\r\n  return state.auth.token;\r\n}\r\n\r\nexport function getBooksFromState(state: RootState): BookResType[] | null {\r\n  return state.books.books;\r\n}\r\n","import {\r\n  createAsyncAction,\r\n  createReducer,\r\n  ActionType,\r\n  createAction,\r\n} from 'typesafe-actions';\r\nimport { AxiosError } from 'axios';\r\nimport { call, put, takeEvery, takeLatest, select } from 'redux-saga/effects';\r\nimport { push } from 'connected-react-router';\r\n\r\nimport { BookResType, BookReqType, BookEditReqType } from '../../types';\r\nimport BookService from '../../services/BookService';\r\nimport { getTokenFromState, getBooksFromState } from '../utils';\r\n\r\n//////////////////////////////////// Action ////////////////////////////////////\r\nconst BOOKS_GETLIST = 'my-books/books/BOOKS_GETLIST'; // 책 목록 가져오기 Action Type\r\nconst BOOKS_ADD = 'my-books/books/BOOK_ADD'; // 책 추가하기 Action Type\r\nconst BOOKS_EDIT = 'my-books/books/BOOK_EDIT'; // 책 수정하기 Action Type\r\nconst BOOKS_REMOVE = 'my-books/books/BOOK_REMOVE'; // 책 삭제하기 Action Type\r\n\r\nconst BOOKS_PENDING = 'my-books/books/BOOKS_PENDING';\r\nconst BOOKS_SUCCESS = 'my-books/books/BOOKS_SUCCESS';\r\nconst BOOKS_FAILURE = 'my-books/books/BOOKS_FAILURE';\r\n\r\n// AsyncAction Creator\r\nexport const booksAsync = createAsyncAction(\r\n  BOOKS_PENDING,\r\n  BOOKS_SUCCESS,\r\n  BOOKS_FAILURE,\r\n)<undefined, BookResType[], AxiosError>();\r\n\r\nexport const getBooks = createAction(BOOKS_GETLIST)(); // 책 가져오기 Action Creator\r\n\r\nexport const addBooks = createAction(\r\n  BOOKS_ADD,\r\n  (addBook: BookReqType) => addBook,\r\n)(); // 책 추가하기 Action Creator\r\n\r\nexport const editBooks = createAction(\r\n  BOOKS_EDIT,\r\n  (editBook: BookEditReqType) => editBook,\r\n)(); // 책 수정하기 Action Creator\r\n\r\nexport const removeBooks = createAction(\r\n  BOOKS_REMOVE,\r\n  (removeBookId: number) => removeBookId,\r\n)(); // 책 삭제하기 Action Creator\r\n\r\n//////////////////////////////////// Reducer ////////////////////////////////////\r\nexport interface BooksState {\r\n  books: BookResType[] | null;\r\n  loading: boolean;\r\n  error: Error | null;\r\n}\r\n\r\nconst initialState: BooksState = {\r\n  books: null,\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nconst actions = { getBooks, addBooks, editBooks, removeBooks };\r\ntype GETBooksAction =\r\n  | ActionType<typeof booksAsync>\r\n  | ActionType<typeof actions>;\r\n\r\nconst getBooksReducer = createReducer<BooksState, GETBooksAction>(\r\n  initialState,\r\n  {\r\n    [BOOKS_PENDING]: (state) => ({\r\n      loading: true,\r\n      books: state.books,\r\n      error: null,\r\n    }),\r\n    [BOOKS_SUCCESS]: (state, action) => ({\r\n      loading: false,\r\n      books: action.payload,\r\n      error: null,\r\n    }),\r\n    [BOOKS_FAILURE]: (state, action) => ({\r\n      loading: false,\r\n      books: null,\r\n      error: action.payload,\r\n    }),\r\n  },\r\n);\r\n\r\n//////////////////////////////////// SAGA ////////////////////////////////////\r\nfunction* getBooksSaga(action: ReturnType<typeof getBooks>) {\r\n  try {\r\n    yield put(booksAsync.request());\r\n    const token: string = yield select(getTokenFromState); // token 값을 가져온다.\r\n    const books: BookResType[] = yield call(BookService.getBooks, token);\r\n    yield put(booksAsync.success(books));\r\n  } catch (e) {\r\n    yield put(booksAsync.failure(e));\r\n  }\r\n}\r\n\r\nfunction* addBookSaga(action: ReturnType<typeof addBooks>) {\r\n  try {\r\n    yield put(booksAsync.request());\r\n    const token: string = yield select(getTokenFromState); // token 값을 가져온다.\r\n    const books: BookResType[] = yield select(getBooksFromState); // books 값을 가져온다.\r\n    const addBook: BookResType = yield call(\r\n      BookService.addBook,\r\n      token,\r\n      action.payload,\r\n    );\r\n    yield put(booksAsync.success([...books, addBook]));\r\n    yield put(push('/'));\r\n  } catch (e) {\r\n    yield put(booksAsync.failure(e));\r\n  }\r\n}\r\n\r\nfunction* editBookSaga(action: ReturnType<typeof editBooks>) {\r\n  try {\r\n    yield put(booksAsync.request());\r\n    const token: string = yield select(getTokenFromState); // token 값을 가져온다.\r\n    const books: BookResType[] = yield select(getBooksFromState); // books 값을 가져온다.\r\n    const editBook: BookResType = yield call(\r\n      BookService.editBook,\r\n      token,\r\n      action.payload.bookId,\r\n      action.payload.bookReq,\r\n    );\r\n    const editedBooks = books.map((book) =>\r\n      book.bookId === editBook.bookId ? editBook : book,\r\n    );\r\n    yield put(booksAsync.success(editedBooks));\r\n    yield put(push('/'));\r\n  } catch (e) {\r\n    yield put(booksAsync.failure(e));\r\n  }\r\n}\r\n\r\nfunction* removeBookSaga(action: ReturnType<typeof removeBooks>) {\r\n  try {\r\n    yield put(booksAsync.request());\r\n    const token: string = yield select(getTokenFromState); // token 값을 가져온다.\r\n    const books: BookResType[] = yield select(getBooksFromState); // books 값을 가져온다.\r\n    const deleteId = action.payload;\r\n    yield call(BookService.deleteBook, token, deleteId);\r\n    const removedBooks = books.filter((book) => book.bookId !== deleteId);\r\n    yield put(booksAsync.success(removedBooks));\r\n    yield put(push('/'));\r\n  } catch (e) {\r\n    yield put(booksAsync.failure(e));\r\n  }\r\n}\r\n\r\nexport function* sagas() {\r\n  yield takeEvery(getBooks, getBooksSaga);\r\n  yield takeLatest(addBooks, addBookSaga);\r\n  yield takeLatest(editBooks, editBookSaga);\r\n  yield takeLatest(removeBooks, removeBookSaga);\r\n}\r\n\r\nexport default getBooksReducer;\r\n","import { useDispatch } from 'react-redux';\r\nimport { goBack as goBackTo, push } from 'connected-react-router';\r\nimport { useCallback } from 'react';\r\n\r\ntype useGoRetType = {\r\n  goBack: () => void;\r\n  goAdd: () => void;\r\n  goEdit: (bookId: number) => void;\r\n  goDetail: (bookId: number) => void;\r\n};\r\n\r\nexport default function useGo(): useGoRetType {\r\n  const dispatch = useDispatch();\r\n\r\n  const goBack = useCallback(() => {\r\n    dispatch(goBackTo());\r\n  }, [dispatch]);\r\n\r\n  const goEdit = useCallback(\r\n    (bookId: number) => {\r\n      dispatch(push(`/edit/${bookId}`));\r\n    },\r\n    [dispatch],\r\n  );\r\n\r\n  const goAdd = useCallback(() => {\r\n    dispatch(push('/add'));\r\n  }, [dispatch]);\r\n\r\n  const goDetail = useCallback(\r\n    (bookId: number) => {\r\n      dispatch(push(`/book/${bookId}`));\r\n    },\r\n    [dispatch],\r\n  );\r\n\r\n  return { goBack, goEdit, goAdd, goDetail };\r\n}\r\n","import axios from 'axios';\r\n\r\nimport { LoginReqType, LoginResType } from '../types';\r\n\r\nconst USER_API_URL = 'https://api.marktube.tv/v1/me';\r\n\r\nexport default class UserService {\r\n  public static async login({\r\n    email,\r\n    password,\r\n  }: LoginReqType): Promise<string> {\r\n    const response = await axios.post<LoginResType>(USER_API_URL, {\r\n      email,\r\n      password,\r\n    });\r\n    return response.data.token;\r\n  }\r\n\r\n  public static async logout(token: string): Promise<void> {\r\n    await axios.delete(USER_API_URL, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n  }\r\n}\r\n","const LOCAL_STORAGE_TOKEN_KEY_NAME = 'token';\r\n\r\nexport default class TokenService {\r\n  public static get(): string | null {\r\n    return localStorage.getItem(LOCAL_STORAGE_TOKEN_KEY_NAME);\r\n  }\r\n\r\n  public static set(token: string): void {\r\n    localStorage.setItem(LOCAL_STORAGE_TOKEN_KEY_NAME, token);\r\n  }\r\n\r\n  public static remove(): void {\r\n    localStorage.removeItem(LOCAL_STORAGE_TOKEN_KEY_NAME);\r\n  }\r\n}\r\n","import { AnyAction } from 'redux';\r\nimport { createActions, handleActions } from 'redux-actions';\r\nimport { takeEvery, put, call, select } from 'redux-saga/effects';\r\nimport { push } from 'connected-react-router';\r\n\r\nimport { LoginReqType } from '../../types';\r\nimport { getTokenFromState } from '../utils';\r\nimport UserService from '../../services/UserService';\r\nimport TokenService from '../../services/TokenService';\r\n\r\nexport interface AuthState {\r\n  token: string | null;\r\n  loading: boolean;\r\n  error: Error | null;\r\n}\r\n\r\nconst initialState: AuthState = {\r\n  token: null,\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nconst options = {\r\n  prefix: 'my-books/auth',\r\n};\r\n\r\nexport const { success, pending, fail } = createActions(\r\n  {\r\n    SUCCESS: (token: string) => ({ token }),\r\n  },\r\n  'PENDING',\r\n  'FAIL',\r\n  options,\r\n);\r\n\r\nconst reducer = handleActions<AuthState, any>(\r\n  {\r\n    PENDING: (state) => ({\r\n      ...state,\r\n      loading: true,\r\n      error: null,\r\n    }),\r\n    SUCCESS: (state, action) => ({\r\n      ...state,\r\n      token: action.payload.token,\r\n      loading: false,\r\n      error: null,\r\n    }),\r\n    FAIL: (state, action) => ({\r\n      ...state,\r\n      loading: false,\r\n      error: action.payload,\r\n    }),\r\n  },\r\n  initialState,\r\n  options,\r\n);\r\n\r\nexport default reducer;\r\n\r\nexport const { login, logout } = createActions(\r\n  {\r\n    LOGIN: ({ email, password }: LoginReqType) => ({\r\n      email,\r\n      password,\r\n    }),\r\n  },\r\n  'LOGOUT',\r\n  options,\r\n);\r\n\r\nexport function* sagas() {\r\n  yield takeEvery(`${options.prefix}/LOGIN`, loginSaga);\r\n  yield takeEvery(`${options.prefix}/LOGOUT`, logoutSaga);\r\n}\r\n\r\ninterface LoginSagaAction extends AnyAction {\r\n  payload: LoginReqType;\r\n}\r\n\r\nfunction* loginSaga(action: LoginSagaAction) {\r\n  try {\r\n    yield put(pending());\r\n    const token: string = yield call(UserService.login, action.payload);\r\n    TokenService.set(token);\r\n    yield put(success(token));\r\n    yield put(push('/'));\r\n  } catch (error) {\r\n    yield put(fail(new Error(error?.response?.data?.error || 'UNKNOWN_ERROR')));\r\n  }\r\n}\r\n\r\nfunction* logoutSaga() {\r\n  try {\r\n    yield put(pending());\r\n    const token: string = yield select(getTokenFromState);\r\n    yield call(UserService.logout, token);\r\n  } catch (error) {\r\n    // console.log(error);\r\n  } finally {\r\n    TokenService.remove();\r\n    yield put(success(null));\r\n    yield put(push('/signin'));\r\n  }\r\n}\r\n","import { useCallback } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { logout as logoutSaga } from '../redux/modules/auth';\r\nimport { login as loginSaga } from '../redux/modules/auth';\r\nimport { LoginReqType } from '../types';\r\n\r\ntype useAuthRetType = {\r\n  login: ({ email, password }: LoginReqType) => void;\r\n  logout: () => void;\r\n};\r\n\r\nexport function useAuth(): useAuthRetType {\r\n  const dispatch = useDispatch();\r\n\r\n  const login = useCallback(\r\n    ({ email, password }: LoginReqType) => {\r\n      dispatch(loginSaga({ email, password }));\r\n    },\r\n    [dispatch],\r\n  );\r\n\r\n  const logout = useCallback(() => {\r\n    dispatch(logoutSaga());\r\n  }, [dispatch]);\r\n\r\n  return { login, logout };\r\n}\r\n","import React, { useCallback, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport List from '../components/List';\r\nimport { RootState } from '../redux/modules/rootReducer';\r\nimport { getBooks, removeBooks } from '../redux/modules/books';\r\nimport useGo from '../hooks/useGo';\r\nimport { useAuth } from '../hooks/useAuth';\r\n\r\nconst ListContainer: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  // Book Component에 전달하기 위한 클릭 리스너\r\n  const { logout } = useAuth();\r\n\r\n  const { goAdd, goDetail, goEdit } = useGo();\r\n\r\n  const removeBook = useCallback(\r\n    (bookId: number) => {\r\n      dispatch(removeBooks(bookId));\r\n    },\r\n    [dispatch],\r\n  );\r\n\r\n  // [project] saga 함수를 실행하는 액션 생성 함수를 실행하는 함수를 컨테이너에 작성했다.\r\n  const { books, loading, error } = useSelector(\r\n    (state: RootState) => state.books,\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (books) return;\r\n\r\n    dispatch(getBooks());\r\n  }, [dispatch, books]);\r\n  // [project] 컨테이너에서 useDispatch, useSelector, useCallback 을 활용해서 중복없이 비동기 데이터를 보여주도록 처리했다.\r\n\r\n  return (\r\n    <>\r\n      {error ? (\r\n        logout()\r\n      ) : (\r\n        <List\r\n          books={books}\r\n          loading={loading}\r\n          goAdd={goAdd}\r\n          logout={logout}\r\n          goDetail={goDetail}\r\n          goEdit={goEdit}\r\n          removeBook={removeBook}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ListContainer;\r\n","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport useToken from '../hooks/useToken';\r\nimport ListContainer from '../containers/ListContainer';\r\n\r\nconst Home: React.FC = () => {\r\n  const token = useToken();\r\n  if (token === null) {\r\n    return <Redirect to=\"/signin\" />;\r\n  }\r\n  return <ListContainer />;\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { message as messageDialog, PageHeader, Input, Button } from 'antd';\r\nimport TextArea from 'antd/lib/input/TextArea';\r\nimport { FormOutlined } from '@ant-design/icons';\r\n\r\nimport Layout from './Layout';\r\nimport styles from './Add.module.css';\r\nimport { BookReqType } from '../types';\r\n\r\ninterface AddProps {\r\n  loading: boolean;\r\n  logout: () => void;\r\n  onSubmitAddBook: (bookReq: BookReqType) => void;\r\n  goBack: () => void;\r\n}\r\n\r\n// [project] 컨테이너에 작성된 함수를 컴포넌트에서 이용했다.\r\nconst Add: React.FC<AddProps> = ({\r\n  loading,\r\n  logout,\r\n  onSubmitAddBook,\r\n  goBack,\r\n}) => {\r\n  const titleRef = React.useRef<Input>(null);\r\n  const messageRef = React.useRef<TextArea>(null);\r\n  const authorRef = React.useRef<Input>(null);\r\n  const urlRef = React.useRef<Input>(null);\r\n\r\n  return (\r\n    <Layout>\r\n      <PageHeader\r\n        onBack={goBack}\r\n        title={\r\n          <div>\r\n            <FormOutlined /> Add Book\r\n          </div>\r\n        }\r\n        subTitle=\"Add Your Book\"\r\n        extra={[\r\n          <Button\r\n            key=\"1\"\r\n            type=\"primary\"\r\n            className={styles.button_logout}\r\n            onClick={logout}\r\n          >\r\n            Logout\r\n          </Button>,\r\n        ]}\r\n      />\r\n\r\n      <img src=\"/bg_list.png\" className={styles.bg} alt=\"books\" />\r\n\r\n      <div className={styles.add}>\r\n        <div className={styles.input_title}>\r\n          Title\r\n          <span className={styles.required}> *</span>\r\n        </div>\r\n        <div className={styles.input_area}>\r\n          <Input placeholder=\"Title\" ref={titleRef} className={styles.input} />\r\n        </div>\r\n        <div className={styles.input_comment}>\r\n          Comment\r\n          <span className={styles.required}> *</span>\r\n        </div>\r\n        <div className={styles.input_area}>\r\n          <TextArea\r\n            rows={4}\r\n            placeholder=\"Comment\"\r\n            ref={messageRef}\r\n            className={styles.input}\r\n          />\r\n        </div>\r\n        <div className={styles.input_author}>\r\n          Author\r\n          <span className={styles.required}> *</span>\r\n        </div>\r\n        <div className={styles.input_area}>\r\n          <Input\r\n            placeholder=\"Author\"\r\n            ref={authorRef}\r\n            className={styles.input}\r\n          />\r\n        </div>\r\n        <div className={styles.input_url}>\r\n          URL\r\n          <span className={styles.required}> *</span>\r\n        </div>\r\n        <div className={styles.input_area}>\r\n          <Input placeholder=\"URL\" ref={urlRef} className={styles.input} />\r\n        </div>\r\n        <div className={styles.button_area}>\r\n          <Button\r\n            size=\"large\"\r\n            loading={loading}\r\n            onClick={click}\r\n            className={styles.button}\r\n          >\r\n            Add\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n\r\n  function click() {\r\n    const title = titleRef.current!.state.value;\r\n    const message = messageRef.current!.state.value;\r\n    const author = authorRef.current!.state.value;\r\n    const url = urlRef.current!.state.value;\r\n\r\n    if (\r\n      title === undefined ||\r\n      message === undefined ||\r\n      author === undefined ||\r\n      url === undefined\r\n    ) {\r\n      messageDialog.error('Please fill out all inputs');\r\n      return;\r\n    } else {\r\n      onSubmitAddBook({\r\n        title,\r\n        message,\r\n        author,\r\n        url,\r\n      });\r\n    }\r\n  }\r\n};\r\nexport default Add;\r\n","import React, { useCallback } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport Add from '../components/Add';\r\nimport { BookReqType } from '../types';\r\nimport { addBooks } from '../redux/modules/books';\r\nimport useGo from '../hooks/useGo';\r\nimport { useAuth } from '../hooks/useAuth';\r\n\r\nconst AddContainer = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  // [project] saga 함수를 실행하는 액션 생성 함수를 실행하는 함수를 컨테이너에 작성했다.\r\n  // [project] 컨테이너에서 useDispatch, useSelector, useCallback 을 활용해서 중복없이 비동기 데이터를 보여주도록 처리했다.\r\n  const onSubmitAddBook = useCallback(\r\n    (bookReq: BookReqType) => {\r\n      dispatch(addBooks(bookReq));\r\n    },\r\n    [dispatch],\r\n  );\r\n\r\n  const { logout } = useAuth();\r\n\r\n  const { goBack } = useGo();\r\n\r\n  return (\r\n    <Add\r\n      loading={false}\r\n      logout={logout}\r\n      onSubmitAddBook={onSubmitAddBook}\r\n      goBack={goBack}\r\n    />\r\n  );\r\n};\r\n\r\nexport default AddContainer;\r\n","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport useToken from '../hooks/useToken';\r\nimport AddContainer from '../containers/AddContainer';\r\n\r\nconst Add = () => {\r\n  const token = useToken();\r\n  if (token === null) {\r\n    return <Redirect to=\"/signin\" />;\r\n  }\r\n  return <AddContainer />;\r\n};\r\n\r\nexport default Add;\r\n","import React, { useEffect } from 'react';\r\nimport { Row, Col, Button, Input, message } from 'antd';\r\n\r\nimport styles from './Signin.module.css';\r\nimport { LoginReqType } from '../types';\r\n\r\ninterface SigninProps {\r\n  loading: boolean;\r\n  error: Error | null;\r\n  login: ({ email, password }: LoginReqType) => void;\r\n}\r\n\r\nconst Signin: React.FC<SigninProps> = ({ loading, login, error }) => {\r\n  const emailRef = React.useRef<Input>(null);\r\n  const passwordRef = React.useRef<Input>(null);\r\n\r\n  useEffect(() => {\r\n    if (error === null) return;\r\n\r\n    switch (error.message) {\r\n      case 'USER_NOT_EXIST':\r\n        message.error('User not exist');\r\n        break;\r\n      case 'PASSWORD_NOT_MATCH':\r\n        message.error('Wrong password');\r\n        break;\r\n      default:\r\n        message.error('Unknown error occured');\r\n    }\r\n  }, [error]);\r\n\r\n  return (\r\n    <form>\r\n      <Row align=\"middle\" className={styles.signin_row}>\r\n        <Col span={24}>\r\n          <Row className={styles.signin_contents}>\r\n            <Col span={12}>\r\n              <img\r\n                src=\"/bg_signin.png\"\r\n                alt=\"Signin\"\r\n                className={styles.signin_bg}\r\n              />\r\n            </Col>\r\n            <Col span={12}>\r\n              <div className={styles.signin_title}>My Books</div>\r\n              <div className={styles.signin_subtitle}>\r\n                Please Note Your Opinion\r\n              </div>\r\n              <div className={styles.signin_underline} />\r\n              <div className={styles.email_title}>\r\n                Email\r\n                <span className={styles.required}> *</span>\r\n              </div>\r\n              <div className={styles.input_area}>\r\n                <Input\r\n                  placeholder=\"Email\"\r\n                  autoComplete=\"email\"\r\n                  name=\"email\"\r\n                  ref={emailRef}\r\n                  className={styles.input}\r\n                />\r\n              </div>\r\n              <div className={styles.password_title}>\r\n                Password\r\n                <span className={styles.required}> *</span>\r\n              </div>\r\n              <div className={styles.input_area}>\r\n                <Input\r\n                  type=\"password\"\r\n                  autoComplete=\"current-password\"\r\n                  ref={passwordRef}\r\n                  className={styles.input}\r\n                />\r\n              </div>\r\n              <div className={styles.button_area}>\r\n                <Button\r\n                  size=\"large\"\r\n                  loading={loading}\r\n                  onClick={click}\r\n                  className={styles.button}\r\n                >\r\n                  Sign In\r\n                </Button>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </form>\r\n  );\r\n\r\n  function click() {\r\n    const email = emailRef.current?.state.value;\r\n    const password = passwordRef.current?.state.value;\r\n\r\n    login({ email, password });\r\n  }\r\n};\r\n\r\nexport default Signin;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport Signin from '../components/Signin';\r\nimport { RootState } from '../redux/modules/rootReducer';\r\nimport { useAuth } from '../hooks/useAuth';\r\n\r\nconst SigninContainer: React.FC = () => {\r\n  const loading = useSelector<RootState, boolean>(\r\n    (state) => state.auth.loading,\r\n  );\r\n  const error = useSelector<RootState, Error | null>(\r\n    (state) => state.auth.error,\r\n  );\r\n\r\n  const { login } = useAuth();\r\n\r\n  return <Signin loading={loading} error={error} login={login} />;\r\n};\r\n\r\nexport default SigninContainer;\r\n","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport useToken from '../hooks/useToken';\r\nimport SigninContainer from '../containers/SigninContainer';\r\n\r\nconst SigninPage = () => {\r\n  const token = useToken();\r\n  if (token !== null) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n  return <SigninContainer />;\r\n};\r\n\r\nexport default SigninPage;\r\n","import React from 'react';\r\n\r\nconst NotFound: React.FC = () => (\r\n  <div>\r\n    <h1>NotFound</h1>\r\n  </div>\r\n);\r\n\r\nexport default NotFound;\r\n","import React from 'react';\r\nimport { FallbackProps } from 'react-error-boundary';\r\n\r\nconst Error: React.FC<FallbackProps> = ({ error }) => {\r\n  if (error === undefined) {\r\n    return <div>Unknown Error</div>;\r\n  }\r\n  return <div>{error.message}</div>;\r\n};\r\n\r\nexport default Error;\r\n","import { combineReducers, AnyAction, Reducer } from 'redux';\r\nimport { connectRouter, RouterState } from 'connected-react-router';\r\nimport { History } from 'history';\r\n\r\nimport books, { BooksState } from './books';\r\nimport auth, { AuthState } from './auth';\r\n\r\nexport interface RootState {\r\n  books: BooksState;\r\n  auth: AuthState;\r\n  router: Reducer<RouterState<unknown>, AnyAction>;\r\n}\r\n\r\nconst rootReducer = (history: History<unknown>) =>\r\n  combineReducers({\r\n    books,\r\n    auth,\r\n    router: connectRouter(history),\r\n  });\r\n\r\nexport default rootReducer;\r\n","import { all } from 'redux-saga/effects';\r\n\r\nimport { sagas as authSagas } from './auth';\r\nimport { sagas as booksSagas } from './books';\r\n\r\nexport default function* rootSaga() {\r\n  yield all([authSagas(), booksSagas()]);\r\n}\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { createBrowserHistory } from 'history';\r\nimport { routerMiddleware } from 'connected-react-router';\r\nimport createSagaMiddleware from 'redux-saga';\r\n\r\nimport rootReducer from './modules/rootReducer';\r\nimport rootSaga from './modules/rootSaga';\r\nimport TokenService from '../services/TokenService';\r\n\r\nexport const history = createBrowserHistory();\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst create = () => {\r\n  const token = TokenService.get();\r\n\r\n  const store = createStore(\r\n    rootReducer(history),\r\n    {\r\n      auth: {\r\n        token,\r\n        loading: false,\r\n        error: null,\r\n      },\r\n    },\r\n    composeWithDevTools(\r\n      applyMiddleware(routerMiddleware(history), sagaMiddleware),\r\n    ),\r\n  );\r\n\r\n  sagaMiddleware.run(rootSaga);\r\n\r\n  return store;\r\n};\r\n\r\nexport default create;\r\n","import React from 'react';\r\nimport { PageHeader, Button, Input } from 'antd';\r\nimport { BookOutlined } from '@ant-design/icons';\r\n\r\nimport Layout from './Layout';\r\nimport { BookResType } from '../types';\r\nimport styles from './Detail.module.css';\r\n\r\nconst { TextArea } = Input;\r\n\r\ninterface DetailProps {\r\n  book: BookResType | null | undefined;\r\n  logout: () => void;\r\n  goEdit: (bookId: number) => void;\r\n  goBack: () => void;\r\n}\r\n\r\n// [project] 컨테이너에 작성된 함수를 컴포넌트에서 이용했다.\r\n// [project] BookResType 의 응답 값을 이용하여, Detail 컴포넌트를 완성했다.\r\nconst Detail: React.FC<DetailProps> = ({ book, logout, goEdit, goBack }) => {\r\n  if (book == null) {\r\n    return (\r\n      <div\r\n        style={{\r\n          width: '100vw',\r\n          height: '100vh',\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n        }}\r\n      >\r\n        <h1>NotFound Book</h1>\r\n        <h3>this is incorrect access</h3>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <PageHeader\r\n        onBack={goBack}\r\n        title={\r\n          <div>\r\n            <BookOutlined /> {book.title}\r\n          </div>\r\n        }\r\n        subTitle={book.author}\r\n        extra={[\r\n          <Button\r\n            key=\"2\"\r\n            type=\"primary\"\r\n            onClick={onEditClick}\r\n            className={styles.button}\r\n          >\r\n            Edit\r\n          </Button>,\r\n          <Button\r\n            key=\"1\"\r\n            type=\"primary\"\r\n            className={styles.button}\r\n            onClick={logout}\r\n          >\r\n            Logout\r\n          </Button>,\r\n        ]}\r\n      />\r\n\r\n      <img src=\"/bg_list.png\" className={styles.bg} alt=\"books\" />\r\n\r\n      <div className={styles.detail}>\r\n        <div className={styles.message_title}>My Comment </div>\r\n        <div className={styles.message}>\r\n          <TextArea\r\n            rows={4}\r\n            value={book.message}\r\n            readOnly\r\n            className={styles.message_textarea}\r\n          />\r\n        </div>\r\n        <div className={styles.button_area}></div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n\r\n  function onEditClick() {\r\n    book && goEdit(book.bookId);\r\n  }\r\n};\r\nexport default Detail;\r\n","import { useSelector } from 'react-redux';\r\nimport { RootState } from '../redux/modules/rootReducer';\r\n\r\nexport default function useBook(id: number) {\r\n  const books = useSelector((state: RootState) => state.books.books);\r\n\r\n  if (books == null) return null;\r\n\r\n  return books.find((book) => book.bookId === id);\r\n}\r\n","import { useParams } from 'react-router-dom';\r\n\r\nexport default function useBookIdParams() {\r\n  const { id } = useParams();\r\n  if (id === undefined) {\r\n    return -1;\r\n  } else return parseInt(id);\r\n}\r\n","import React from 'react';\r\n\r\nimport Detail from '../components/Detail';\r\nimport useBook from '../hooks/useBook';\r\nimport useGo from '../hooks/useGo';\r\nimport { useAuth } from '../hooks/useAuth';\r\nimport useBookIdParams from '../hooks/useBookIdParams';\r\n\r\nconst DetailContainer = () => {\r\n  // [project] saga 함수를 실행하는 액션 생성 함수를 실행하는 함수를 컨테이너에 작성했다.\r\n  // [project] 컨테이너에서 useDispatch, useSelector, useCallback 을 활용해서 중복없이 비동기 데이터를 보여주도록 처리했다.\r\n  // [project] Edit 나 Detail 컴포넌트에서 새로고침 시, 리스트가 없는 경우, 리스트를 받아오도록 처리했다.\r\n  const { logout } = useAuth();\r\n\r\n  const { goEdit, goBack } = useGo();\r\n\r\n  const id = useBookIdParams();\r\n\r\n  const book = useBook(id);\r\n\r\n  return <Detail book={book} logout={logout} goEdit={goEdit} goBack={goBack} />;\r\n};\r\n\r\nexport default DetailContainer;\r\n","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport useToken from '../hooks/useToken';\r\nimport DetailContainer from '../containers/DetailContainer';\r\nimport { RouterComponentProps, BookParams } from '../types';\r\n\r\nconst Detail = ({ match }: RouterComponentProps<BookParams>) => {\r\n  const token = useToken();\r\n  if (token === null) {\r\n    return <Redirect to=\"/signin\" />;\r\n  }\r\n  return <DetailContainer />;\r\n};\r\n\r\nexport default Detail;\r\n","import React, { useRef } from 'react';\r\nimport { message as messageDialog, PageHeader, Input, Button } from 'antd';\r\nimport TextArea from 'antd/lib/input/TextArea';\r\nimport { FormOutlined } from '@ant-design/icons';\r\n\r\nimport Layout from './Layout';\r\nimport { BookResType, BookEditReqType } from '../types';\r\nimport styles from './Edit.module.css';\r\n\r\ninterface EditProps {\r\n  book: BookResType | undefined | null;\r\n  logout: () => void;\r\n  updateBook: (editBook: BookEditReqType) => void;\r\n  goBack: () => void;\r\n}\r\n\r\n// [project] 컨테이너에 작성된 함수를 컴포넌트에서 이용했다.\r\n// [project] BookResType 의 응답 값을 이용하여, Edit 컴포넌트를 완성했다.\r\nconst Edit: React.FC<EditProps> = ({ book, logout, updateBook, goBack }) => {\r\n  const titleRef = useRef<Input>(null);\r\n  const messageRef = useRef<TextArea>(null);\r\n  const authorRef = useRef<Input>(null);\r\n  const urlRef = useRef<Input>(null);\r\n\r\n  if (book == null) {\r\n    return (\r\n      <div\r\n        style={{\r\n          width: '100vw',\r\n          height: '100vh',\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n        }}\r\n      >\r\n        <h1>NotFound Book</h1>\r\n        <h3>this is incorrect access</h3>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <PageHeader\r\n        onBack={goBack}\r\n        title={\r\n          <div>\r\n            <FormOutlined /> Edit Book\r\n          </div>\r\n        }\r\n        subTitle=\"Edit Your Book\"\r\n        extra={[\r\n          <Button\r\n            key=\"1\"\r\n            type=\"primary\"\r\n            className={styles.button_logout}\r\n            onClick={logout}\r\n          >\r\n            Logout\r\n          </Button>,\r\n        ]}\r\n      />\r\n\r\n      <img src=\"/bg_list.png\" className={styles.bg} alt=\"books\" />\r\n\r\n      <div className={styles.edit}>\r\n        <div className={styles.input_title}>\r\n          Title\r\n          <span className={styles.required}> *</span>\r\n        </div>\r\n        <div className={styles.input_area}>\r\n          <Input\r\n            placeholder=\"Title\"\r\n            ref={titleRef}\r\n            defaultValue={book.title || ''}\r\n            className={styles.input}\r\n          />\r\n        </div>\r\n        <div className={styles.input_comment}>\r\n          Comment\r\n          <span className={styles.required}> *</span>\r\n        </div>\r\n        <div className={styles.input_area}>\r\n          <TextArea\r\n            rows={4}\r\n            placeholder=\"Comment\"\r\n            ref={messageRef}\r\n            defaultValue={book.message || ''}\r\n            className={styles.input}\r\n            style={{ minHeight: 100 }}\r\n          />\r\n        </div>\r\n        <div className={styles.input_author}>Author</div>\r\n        <div className={styles.input_area}>\r\n          <Input\r\n            placeholder=\"Author\"\r\n            ref={authorRef}\r\n            defaultValue={book.author || ''}\r\n            className={styles.input}\r\n          />\r\n        </div>\r\n        <div className={styles.input_url}>URL</div>\r\n        <div className={styles.input_area}>\r\n          <Input\r\n            placeholder=\"URL\"\r\n            ref={urlRef}\r\n            defaultValue={book.url || ''}\r\n            className={styles.input}\r\n          />\r\n        </div>\r\n        <div className={styles.button_area}>\r\n          <Button\r\n            size=\"large\"\r\n            onClick={onUpdateClick}\r\n            className={styles.button}\r\n          >\r\n            Update\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n\r\n  function onUpdateClick() {\r\n    if (book == null) {\r\n      return;\r\n    }\r\n\r\n    const title = titleRef.current!.state.value;\r\n    const message = messageRef.current!.state.value;\r\n    const author = authorRef.current!.state.value;\r\n    const url = urlRef.current!.state.value;\r\n\r\n    if (\r\n      title === undefined ||\r\n      message === undefined ||\r\n      author === undefined ||\r\n      url === undefined\r\n    ) {\r\n      messageDialog.error('Please fill out all inputs');\r\n      return;\r\n    }\r\n\r\n    updateBook({\r\n      bookId: book.bookId,\r\n      bookReq: { title, author, message, url },\r\n    });\r\n  }\r\n};\r\nexport default Edit;\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport Edit from '../components/Edit';\r\nimport { BookEditReqType } from '../types';\r\nimport useBook from '../hooks/useBook';\r\nimport { editBooks } from '../redux/modules/books';\r\nimport useGo from '../hooks/useGo';\r\nimport { useAuth } from '../hooks/useAuth';\r\nimport useBookIdParams from '../hooks/useBookIdParams';\r\n\r\nconst EditContainer = () => {\r\n  const dispatch = useDispatch();\r\n  // [project] saga 함수를 실행하는 액션 생성 함수를 실행하는 함수를 컨테이너에 작성했다.\r\n  // [project] 컨테이너에서 useDispatch, useSelector, useCallback 을 활용해서 중복없이 비동기 데이터를 보여주도록 처리했다.\r\n  // [project] Edit 나 Detail 컴포넌트에서 새로고침 시, 리스트가 없는 경우, 리스트를 받아오도록 처리했다.\r\n  const updateBook = (editBook: BookEditReqType) => {\r\n    dispatch(editBooks(editBook));\r\n  };\r\n\r\n  const { logout } = useAuth();\r\n\r\n  const { goBack } = useGo();\r\n\r\n  const id = useBookIdParams();\r\n\r\n  const book = useBook(id);\r\n\r\n  return (\r\n    <Edit book={book} logout={logout} updateBook={updateBook} goBack={goBack} />\r\n  );\r\n};\r\n\r\nexport default EditContainer;\r\n","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport useToken from '../hooks/useToken';\r\nimport EditContainer from '../containers/EditContainer';\r\n\r\nconst Edit = () => {\r\n  const token = useToken();\r\n  if (token === null) {\r\n    return <Redirect to=\"/signin\" />;\r\n  }\r\n  return <EditContainer />;\r\n};\r\n\r\nexport default Edit;\r\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport Home from './pages/Home';\r\nimport Add from './pages/Add';\r\nimport Signin from './pages/Signin';\r\nimport NotFound from './pages/NotFound';\r\nimport Error from './pages/Error';\r\nimport ErrorBoundary from 'react-error-boundary';\r\nimport { ConnectedRouter } from 'connected-react-router';\r\nimport { history } from './redux/create';\r\nimport Detail from './pages/Detail';\r\nimport Edit from './pages/Edit';\r\n\r\nconst App = () => (\r\n  <ErrorBoundary FallbackComponent={Error}>\r\n    <ConnectedRouter history={history}>\r\n      <Switch>\r\n        <Route exact path=\"/edit/:id\" component={Edit} />\r\n        <Route exact path=\"/book/:id\" component={Detail} />\r\n        <Route exact path=\"/signin\" component={Signin} />\r\n        <Route exact path=\"/add\" component={Add} />\r\n        <Route exact path=\"/\" component={Home} />\r\n        <Route component={NotFound} />\r\n      </Switch>\r\n    </ConnectedRouter>\r\n  </ErrorBoundary>\r\n);\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport 'antd/dist/antd.css';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport create from './redux/create';\r\n\r\nconst store = create();\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"signin_row\":\"Signin_signin_row__hW8Uv\",\"signin_title\":\"Signin_signin_title__1-Qhu\",\"signin_subtitle\":\"Signin_signin_subtitle__23rI7\",\"signin_underline\":\"Signin_signin_underline__10N3h\",\"signin_contents\":\"Signin_signin_contents__3dBtm\",\"signin_bg\":\"Signin_signin_bg__2VXi0\",\"email_title\":\"Signin_email_title__tLDwW\",\"password_title\":\"Signin_password_title__1XDwz\",\"required\":\"Signin_required__2un1o\",\"input_area\":\"Signin_input_area__1RrDq\",\"input\":\"Signin_input__3my1c\",\"button_area\":\"Signin_button_area__APEZO\",\"button\":\"Signin_button__1-20Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"detail\":\"Detail_detail__1vd4Q\",\"bg\":\"Detail_bg__2O9ZY\",\"message_title\":\"Detail_message_title__oBb4D\",\"message\":\"Detail_message__1VeNU\",\"message_textarea\":\"Detail_message_textarea__23e0i\",\"button_area\":\"Detail_button_area__3NUyV\",\"button\":\"Detail_button__1XxZw\"};"],"sourceRoot":""}